/*
* generated by Xtext
*/
package edu.ksu.cis.projects.mdcf.devicemodel.ui.contentassist.antlr;

import java.util.Collection;
import java.util.Map;
import java.util.HashMap;

import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;

import com.google.inject.Inject;

import edu.ksu.cis.projects.mdcf.devicemodel.services.DeviceModelingLanguageGrammarAccess;

public class DeviceModelingLanguageParser extends AbstractContentAssistParser {
	
	@Inject
	private DeviceModelingLanguageGrammarAccess grammarAccess;
	
	private Map<AbstractElement, String> nameMappings;
	
	@Override
	protected edu.ksu.cis.projects.mdcf.devicemodel.ui.contentassist.antlr.internal.InternalDeviceModelingLanguageParser createParser() {
		edu.ksu.cis.projects.mdcf.devicemodel.ui.contentassist.antlr.internal.InternalDeviceModelingLanguageParser result = new edu.ksu.cis.projects.mdcf.devicemodel.ui.contentassist.antlr.internal.InternalDeviceModelingLanguageParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}
	
	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getDeclAccess().getAlternatives(), "rule__Decl__Alternatives");
					put(grammarAccess.getGroupElementDeclAccess().getAlternatives(), "rule__GroupElementDecl__Alternatives");
					put(grammarAccess.getGroupAttrDeclAccess().getAlternatives_2(), "rule__GroupAttrDecl__Alternatives_2");
					put(grammarAccess.getModifierAccess().getAlternatives(), "rule__Modifier__Alternatives");
					put(grammarAccess.getTypeAccess().getAlternatives(), "rule__Type__Alternatives");
					put(grammarAccess.getTypeAccess().getAlternatives_0_2(), "rule__Type__Alternatives_0_2");
					put(grammarAccess.getLiteralAccess().getAlternatives(), "rule__Literal__Alternatives");
					put(grammarAccess.getSubGroupTypeAccess().getAlternatives(), "rule__SubGroupType__Alternatives");
					put(grammarAccess.getDeclAccess().getGroup_0(), "rule__Decl__Group_0__0");
					put(grammarAccess.getDeclAccess().getGroup_1(), "rule__Decl__Group_1__0");
					put(grammarAccess.getDeclAccess().getGroup_1_3(), "rule__Decl__Group_1_3__0");
					put(grammarAccess.getDeclAccess().getGroup_1_3_2(), "rule__Decl__Group_1_3_2__0");
					put(grammarAccess.getFeatureGroupBodyAccess().getGroup(), "rule__FeatureGroupBody__Group__0");
					put(grammarAccess.getGroupAttrDeclAccess().getGroup(), "rule__GroupAttrDecl__Group__0");
					put(grammarAccess.getGroupAttrDeclAccess().getGroup_2_0(), "rule__GroupAttrDecl__Group_2_0__0");
					put(grammarAccess.getGroupAttrDeclAccess().getGroup_2_1(), "rule__GroupAttrDecl__Group_2_1__0");
					put(grammarAccess.getTypeAccess().getGroup_0(), "rule__Type__Group_0__0");
					put(grammarAccess.getTypeAccess().getGroup_0_2_0(), "rule__Type__Group_0_2_0__0");
					put(grammarAccess.getTypeAccess().getGroup_0_2_1(), "rule__Type__Group_0_2_1__0");
					put(grammarAccess.getTypeAccess().getGroup_1(), "rule__Type__Group_1__0");
					put(grammarAccess.getTypeAccess().getGroup_1_3(), "rule__Type__Group_1_3__0");
					put(grammarAccess.getBasicLiteralAccess().getGroup(), "rule__BasicLiteral__Group__0");
					put(grammarAccess.getTupleLiteralAccess().getGroup(), "rule__TupleLiteral__Group__0");
					put(grammarAccess.getTupleLiteralAccess().getGroup_2(), "rule__TupleLiteral__Group_2__0");
					put(grammarAccess.getTupleLiteralAccess().getGroup_2_1(), "rule__TupleLiteral__Group_2_1__0");
					put(grammarAccess.getListLiteralAccess().getGroup(), "rule__ListLiteral__Group__0");
					put(grammarAccess.getListLiteralAccess().getGroup_2(), "rule__ListLiteral__Group_2__0");
					put(grammarAccess.getListLiteralAccess().getGroup_2_1(), "rule__ListLiteral__Group_2_1__0");
					put(grammarAccess.getSetLiteralAccess().getGroup(), "rule__SetLiteral__Group__0");
					put(grammarAccess.getSetLiteralAccess().getGroup_2(), "rule__SetLiteral__Group_2__0");
					put(grammarAccess.getSetLiteralAccess().getGroup_2_1(), "rule__SetLiteral__Group_2_1__0");
					put(grammarAccess.getSubGroupDeclAccess().getGroup(), "rule__SubGroupDecl__Group__0");
					put(grammarAccess.getSubGroupDeclAccess().getGroup_0(), "rule__SubGroupDecl__Group_0__0");
					put(grammarAccess.getSubGroupTypeAccess().getGroup_0(), "rule__SubGroupType__Group_0__0");
					put(grammarAccess.getSubGroupTypeAccess().getGroup_1(), "rule__SubGroupType__Group_1__0");
					put(grammarAccess.getSubGroupTypeAccess().getGroup_1_1(), "rule__SubGroupType__Group_1_1__0");
					put(grammarAccess.getSubGroupTypeAccess().getGroup_1_1_2(), "rule__SubGroupType__Group_1_1_2__0");
					put(grammarAccess.getModelAccess().getDeclsAssignment(), "rule__Model__DeclsAssignment");
					put(grammarAccess.getDeclAccess().getNameAssignment_0_2(), "rule__Decl__NameAssignment_0_2");
					put(grammarAccess.getDeclAccess().getNameAssignment_1_2(), "rule__Decl__NameAssignment_1_2");
					put(grammarAccess.getDeclAccess().getSupersAssignment_1_3_1(), "rule__Decl__SupersAssignment_1_3_1");
					put(grammarAccess.getDeclAccess().getSupersAssignment_1_3_2_1(), "rule__Decl__SupersAssignment_1_3_2_1");
					put(grammarAccess.getDeclAccess().getBodyAssignment_1_4(), "rule__Decl__BodyAssignment_1_4");
					put(grammarAccess.getFeatureGroupBodyAccess().getGroupElementsAssignment_2(), "rule__FeatureGroupBody__GroupElementsAssignment_2");
					put(grammarAccess.getGroupAttrDeclAccess().getModifierAssignment_0(), "rule__GroupAttrDecl__ModifierAssignment_0");
					put(grammarAccess.getGroupAttrDeclAccess().getAttributeNameAssignment_1(), "rule__GroupAttrDecl__AttributeNameAssignment_1");
					put(grammarAccess.getGroupAttrDeclAccess().getAttributeTypeAssignment_2_0_1(), "rule__GroupAttrDecl__AttributeTypeAssignment_2_0_1");
					put(grammarAccess.getGroupAttrDeclAccess().getAttributeLiteralAssignment_2_1_1(), "rule__GroupAttrDecl__AttributeLiteralAssignment_2_1_1");
					put(grammarAccess.getTypeAccess().getBaseTypeAssignment_0_1(), "rule__Type__BaseTypeAssignment_0_1");
					put(grammarAccess.getTypeAccess().getElemTypesAssignment_1_2(), "rule__Type__ElemTypesAssignment_1_2");
					put(grammarAccess.getTypeAccess().getElemTypesAssignment_1_3_1(), "rule__Type__ElemTypesAssignment_1_3_1");
					put(grammarAccess.getBasicLiteralAccess().getTypeConsAssignment_0(), "rule__BasicLiteral__TypeConsAssignment_0");
					put(grammarAccess.getBasicLiteralAccess().getLitAssignment_1(), "rule__BasicLiteral__LitAssignment_1");
					put(grammarAccess.getTupleLiteralAccess().getElemsAssignment_2_0(), "rule__TupleLiteral__ElemsAssignment_2_0");
					put(grammarAccess.getTupleLiteralAccess().getElemsAssignment_2_1_1(), "rule__TupleLiteral__ElemsAssignment_2_1_1");
					put(grammarAccess.getListLiteralAccess().getTypeConsAssignment_0(), "rule__ListLiteral__TypeConsAssignment_0");
					put(grammarAccess.getListLiteralAccess().getElemsAssignment_2_0(), "rule__ListLiteral__ElemsAssignment_2_0");
					put(grammarAccess.getListLiteralAccess().getElemsAssignment_2_1_1(), "rule__ListLiteral__ElemsAssignment_2_1_1");
					put(grammarAccess.getSetLiteralAccess().getTypeConsAssignment_0(), "rule__SetLiteral__TypeConsAssignment_0");
					put(grammarAccess.getSetLiteralAccess().getElemsAssignment_2_0(), "rule__SetLiteral__ElemsAssignment_2_0");
					put(grammarAccess.getSetLiteralAccess().getElemsAssignment_2_1_1(), "rule__SetLiteral__ElemsAssignment_2_1_1");
					put(grammarAccess.getELiteralAccess().getLitAssignment(), "rule__ELiteral__LitAssignment");
					put(grammarAccess.getSubGroupDeclAccess().getCategoryNameAssignment_0_0(), "rule__SubGroupDecl__CategoryNameAssignment_0_0");
					put(grammarAccess.getSubGroupDeclAccess().getNameAssignment_1(), "rule__SubGroupDecl__NameAssignment_1");
					put(grammarAccess.getSubGroupDeclAccess().getTypeAssignment_2(), "rule__SubGroupDecl__TypeAssignment_2");
					put(grammarAccess.getSubGroupTypeAccess().getTypeAssignment_0_2(), "rule__SubGroupType__TypeAssignment_0_2");
					put(grammarAccess.getSubGroupTypeAccess().getSupersAssignment_1_1_1(), "rule__SubGroupType__SupersAssignment_1_1_1");
					put(grammarAccess.getSubGroupTypeAccess().getSupersAssignment_1_1_2_1(), "rule__SubGroupType__SupersAssignment_1_1_2_1");
					put(grammarAccess.getSubGroupTypeAccess().getBodyAssignment_1_3(), "rule__SubGroupType__BodyAssignment_1_3");
				}
			};
		}
		return nameMappings.get(element);
	}
	
	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			edu.ksu.cis.projects.mdcf.devicemodel.ui.contentassist.antlr.internal.InternalDeviceModelingLanguageParser typedParser = (edu.ksu.cis.projects.mdcf.devicemodel.ui.contentassist.antlr.internal.InternalDeviceModelingLanguageParser) parser;
			typedParser.entryRuleModel();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}		
	}
	
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}
	
	public DeviceModelingLanguageGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}
	
	public void setGrammarAccess(DeviceModelingLanguageGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
