/*
* generated by Xtext
*/
grammar InternalDeviceModelingLanguage;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package edu.ksu.cis.projects.mdcf.devicemodel.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package edu.ksu.cis.projects.mdcf.devicemodel.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import edu.ksu.cis.projects.mdcf.devicemodel.services.DeviceModelingLanguageGrammarAccess;

}

@parser::members {

 	private DeviceModelingLanguageGrammarAccess grammarAccess;
 	
    public InternalDeviceModelingLanguageParser(TokenStream input, DeviceModelingLanguageGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "Model";	
   	}
   	
   	@Override
   	protected DeviceModelingLanguageGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleModel
entryRuleModel returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getModelRule()); }
	 iv_ruleModel=ruleModel 
	 { $current=$iv_ruleModel.current; } 
	 EOF 
;

// Rule Model
ruleModel returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{ 
	        newCompositeNode(grammarAccess.getModelAccess().getDeclsDeclParserRuleCall_0()); 
	    }
		lv_decls_0_0=ruleDecl		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModelRule());
	        }
       		add(
       			$current, 
       			"decls",
        		lv_decls_0_0, 
        		"Decl");
	        afterParserOrEnumRuleCall();
	    }

)
)*
;





// Entry rule entryRuleDecl
entryRuleDecl returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDeclRule()); }
	 iv_ruleDecl=ruleDecl 
	 { $current=$iv_ruleDecl.current; } 
	 EOF 
;

// Rule Decl
ruleDecl returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getDeclAccess().getTypeDeclParserRuleCall_0()); 
    }
    this_TypeDecl_0=ruleTypeDecl
    { 
        $current = $this_TypeDecl_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getDeclAccess().getFeaturesDeclParserRuleCall_1()); 
    }
    this_FeaturesDecl_1=ruleFeaturesDecl
    { 
        $current = $this_FeaturesDecl_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleTypeDecl
entryRuleTypeDecl returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTypeDeclRule()); }
	 iv_ruleTypeDecl=ruleTypeDecl 
	 { $current=$iv_ruleTypeDecl.current; } 
	 EOF 
;

// Rule TypeDecl
ruleTypeDecl returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='type' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getTypeDeclAccess().getTypeKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getTypeDeclAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTypeDeclRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)(	otherlv_2='<:' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getTypeDeclAccess().getLessThanSignColonKeyword_2_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getTypeDeclRule());
	        }
        }
	otherlv_3=RULE_ID
	{
		newLeafNode(otherlv_3, grammarAccess.getTypeDeclAccess().getSupersTypeDeclCrossReference_2_1_0()); 
	}

)
)(	otherlv_4=',' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getTypeDeclAccess().getCommaKeyword_2_2_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getTypeDeclRule());
	        }
        }
	otherlv_5=RULE_ID
	{
		newLeafNode(otherlv_5, grammarAccess.getTypeDeclAccess().getSupersTypeDeclCrossReference_2_2_1_0()); 
	}

)
))*)?(	otherlv_6='{' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getTypeDeclAccess().getLeftCurlyBracketKeyword_3_0());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getTypeDeclAccess().getElemsELiteralParserRuleCall_3_1_0_0()); 
	    }
		lv_elems_7_0=ruleELiteral		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTypeDeclRule());
	        }
       		add(
       			$current, 
       			"elems",
        		lv_elems_7_0, 
        		"ELiteral");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_8=',' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getTypeDeclAccess().getCommaKeyword_3_1_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTypeDeclAccess().getElemsELiteralParserRuleCall_3_1_1_1_0()); 
	    }
		lv_elems_9_0=ruleELiteral		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTypeDeclRule());
	        }
       		add(
       			$current, 
       			"elems",
        		lv_elems_9_0, 
        		"ELiteral");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_10='}' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getTypeDeclAccess().getRightCurlyBracketKeyword_3_2());
    }
)?)
;





// Entry rule entryRuleFeaturesDecl
entryRuleFeaturesDecl returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFeaturesDeclRule()); }
	 iv_ruleFeaturesDecl=ruleFeaturesDecl 
	 { $current=$iv_ruleFeaturesDecl.current; } 
	 EOF 
;

// Rule FeaturesDecl
ruleFeaturesDecl returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_complete_0_0=	'complete' 
    {
        newLeafNode(lv_complete_0_0, grammarAccess.getFeaturesDeclAccess().getCompleteCompleteKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFeaturesDeclRule());
	        }
       		setWithLastConsumed($current, "complete", lv_complete_0_0, "complete");
	    }

)
)?	otherlv_1='features' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getFeaturesDeclAccess().getFeaturesKeyword_1());
    }
(
(
		lv_name_2_0=RULE_ID
		{
			newLeafNode(lv_name_2_0, grammarAccess.getFeaturesDeclAccess().getNameIDTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFeaturesDeclRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"ID");
	    }

)
)(	otherlv_3='<:' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getFeaturesDeclAccess().getLessThanSignColonKeyword_3_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getFeaturesDeclRule());
	        }
        }
	otherlv_4=RULE_ID
	{
		newLeafNode(otherlv_4, grammarAccess.getFeaturesDeclAccess().getSupersFeaturesDeclCrossReference_3_1_0()); 
	}

)
)(	otherlv_5=',' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getFeaturesDeclAccess().getCommaKeyword_3_2_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getFeaturesDeclRule());
	        }
        }
	otherlv_6=RULE_ID
	{
		newLeafNode(otherlv_6, grammarAccess.getFeaturesDeclAccess().getSupersFeaturesDeclCrossReference_3_2_1_0()); 
	}

)
))*)?(
(
		{ 
	        newCompositeNode(grammarAccess.getFeaturesDeclAccess().getBodyFeaturesBodyParserRuleCall_4_0()); 
	    }
		lv_body_7_0=ruleFeaturesBody		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFeaturesDeclRule());
	        }
       		set(
       			$current, 
       			"body",
        		lv_body_7_0, 
        		"FeaturesBody");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleFeaturesBody
entryRuleFeaturesBody returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFeaturesBodyRule()); }
	 iv_ruleFeaturesBody=ruleFeaturesBody 
	 { $current=$iv_ruleFeaturesBody.current; } 
	 EOF 
;

// Rule FeaturesBody
ruleFeaturesBody returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getFeaturesBodyAccess().getFeaturesBodyAction_0(),
            $current);
    }
)(	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getFeaturesBodyAccess().getLeftCurlyBracketKeyword_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFeaturesBodyAccess().getFeaturesFeatureDeclParserRuleCall_1_1_0()); 
	    }
		lv_features_2_0=ruleFeatureDecl		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFeaturesBodyRule());
	        }
       		add(
       			$current, 
       			"features",
        		lv_features_2_0, 
        		"FeatureDecl");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_3='}' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getFeaturesBodyAccess().getRightCurlyBracketKeyword_1_2());
    }
)?)
;





// Entry rule entryRuleFeatureDecl
entryRuleFeatureDecl returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFeatureDeclRule()); }
	 iv_ruleFeatureDecl=ruleFeatureDecl 
	 { $current=$iv_ruleFeatureDecl.current; } 
	 EOF 
;

// Rule FeatureDecl
ruleFeatureDecl returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getFeatureDeclAccess().getInvariantDeclParserRuleCall_0()); 
    }
    this_InvariantDecl_0=ruleInvariantDecl
    { 
        $current = $this_InvariantDecl_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getFeatureDeclAccess().getAttrDeclParserRuleCall_1()); 
    }
    this_AttrDecl_1=ruleAttrDecl
    { 
        $current = $this_AttrDecl_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getFeatureDeclAccess().getSubFeaturesDeclParserRuleCall_2()); 
    }
    this_SubFeaturesDecl_2=ruleSubFeaturesDecl
    { 
        $current = $this_SubFeaturesDecl_2.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleInvariantDecl
entryRuleInvariantDecl returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInvariantDeclRule()); }
	 iv_ruleInvariantDecl=ruleInvariantDecl 
	 { $current=$iv_ruleInvariantDecl.current; } 
	 EOF 
;

// Rule InvariantDecl
ruleInvariantDecl returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:

    { 
        newCompositeNode(grammarAccess.getInvariantDeclAccess().getMultiplicityInvariantDeclParserRuleCall()); 
    }
    this_MultiplicityInvariantDecl_0=ruleMultiplicityInvariantDecl
    { 
        $current = $this_MultiplicityInvariantDecl_0.current; 
        afterParserOrEnumRuleCall();
    }

;





// Entry rule entryRuleMultiplicityInvariantDecl
entryRuleMultiplicityInvariantDecl returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMultiplicityInvariantDeclRule()); }
	 iv_ruleMultiplicityInvariantDecl=ruleMultiplicityInvariantDecl 
	 { $current=$iv_ruleMultiplicityInvariantDecl.current; } 
	 EOF 
;

// Rule MultiplicityInvariantDecl
ruleMultiplicityInvariantDecl returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='inv' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getMultiplicityInvariantDeclAccess().getInvKeyword_0());
    }
((
(
		lv_invName_1_0=RULE_ID
		{
			newLeafNode(lv_invName_1_0, grammarAccess.getMultiplicityInvariantDeclAccess().getInvNameIDTerminalRuleCall_1_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMultiplicityInvariantDeclRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"invName",
        		lv_invName_1_0, 
        		"ID");
	    }

)
)	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getMultiplicityInvariantDeclAccess().getColonKeyword_1_1());
    }
)?((
(
		{ 
	        newCompositeNode(grammarAccess.getMultiplicityInvariantDeclAccess().getLoConstraintNatParserRuleCall_2_0_0()); 
	    }
		lv_lo_3_0=ruleConstraintNat		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMultiplicityInvariantDeclRule());
	        }
       		set(
       			$current, 
       			"lo",
        		lv_lo_3_0, 
        		"ConstraintNat");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4='..' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getMultiplicityInvariantDeclAccess().getFullStopFullStopKeyword_2_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMultiplicityInvariantDeclAccess().getHiConstraintNatParserRuleCall_2_2_0()); 
	    }
		lv_hi_5_0=ruleConstraintNat		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMultiplicityInvariantDeclRule());
	        }
       		set(
       			$current, 
       			"hi",
        		lv_hi_5_0, 
        		"ConstraintNat");
	        afterParserOrEnumRuleCall();
	    }

)
))(
(
		{ 
	        newCompositeNode(grammarAccess.getMultiplicityInvariantDeclAccess().getMatchSubFeaturesMatchParserRuleCall_3_0()); 
	    }
		lv_match_6_0=ruleSubFeaturesMatch		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMultiplicityInvariantDeclRule());
	        }
       		set(
       			$current, 
       			"match",
        		lv_match_6_0, 
        		"SubFeaturesMatch");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_7=':' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getMultiplicityInvariantDeclAccess().getColonKeyword_4_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getMultiplicityInvariantDeclRule());
	        }
        }
	otherlv_8=RULE_ID
	{
		newLeafNode(otherlv_8, grammarAccess.getMultiplicityInvariantDeclAccess().getTypeFeaturesDeclCrossReference_4_1_0()); 
	}

)
))?)
;





// Entry rule entryRuleSubFeaturesMatch
entryRuleSubFeaturesMatch returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSubFeaturesMatchRule()); }
	 iv_ruleSubFeaturesMatch=ruleSubFeaturesMatch 
	 { $current=$iv_ruleSubFeaturesMatch.current; } 
	 EOF 
;

// Rule SubFeaturesMatch
ruleSubFeaturesMatch returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getSubFeaturesMatchAccess().getSubFeaturesMatchAction_0(),
            $current);
    }
)(
(
		lv_distinct_1_0=	'distinct' 
    {
        newLeafNode(lv_distinct_1_0, grammarAccess.getSubFeaturesMatchAccess().getDistinctDistinctKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSubFeaturesMatchRule());
	        }
       		setWithLastConsumed($current, "distinct", lv_distinct_1_0, "distinct");
	    }

)
)?((
(
		lv_categoryNames_2_0=RULE_ID
		{
			newLeafNode(lv_categoryNames_2_0, grammarAccess.getSubFeaturesMatchAccess().getCategoryNamesIDTerminalRuleCall_2_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSubFeaturesMatchRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"categoryNames",
        		lv_categoryNames_2_0, 
        		"ID");
	    }

)
)	otherlv_3='.' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getSubFeaturesMatchAccess().getFullStopKeyword_2_1());
    }
)*((
(
		lv_name_4_0=RULE_ID
		{
			newLeafNode(lv_name_4_0, grammarAccess.getSubFeaturesMatchAccess().getNameIDTerminalRuleCall_3_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSubFeaturesMatchRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_4_0, 
        		"ID");
	    }

)
)
    |(
(
		lv_any_5_0=	'*' 
    {
        newLeafNode(lv_any_5_0, grammarAccess.getSubFeaturesMatchAccess().getAnyAsteriskKeyword_3_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSubFeaturesMatchRule());
	        }
       		setWithLastConsumed($current, "any", lv_any_5_0, "*");
	    }

)
)))
;





// Entry rule entryRuleConstraintNat
entryRuleConstraintNat returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getConstraintNatRule()); }
	 iv_ruleConstraintNat=ruleConstraintNat 
	 { $current=$iv_ruleConstraintNat.current; } 
	 EOF 
;

// Rule ConstraintNat
ruleConstraintNat returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
    {
        $current = forceCreateModelElement(
            grammarAccess.getConstraintNatAccess().getNumNatConstraintAction_0_0(),
            $current);
    }
)(
(
		lv_num_1_0=RULE_NAT
		{
			newLeafNode(lv_num_1_0, grammarAccess.getConstraintNatAccess().getNumNATTerminalRuleCall_0_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getConstraintNatRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"num",
        		lv_num_1_0, 
        		"NAT");
	    }

)
))
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getConstraintNatAccess().getAnyNatConstraintAction_1_0(),
            $current);
    }
)	otherlv_3='*' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getConstraintNatAccess().getAsteriskKeyword_1_1());
    }
))
;





// Entry rule entryRuleAttrDecl
entryRuleAttrDecl returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAttrDeclRule()); }
	 iv_ruleAttrDecl=ruleAttrDecl 
	 { $current=$iv_ruleAttrDecl.current; } 
	 EOF 
;

// Rule AttrDecl
ruleAttrDecl returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getAttrDeclAccess().getModifierModifierParserRuleCall_0_0()); 
	    }
		lv_modifier_0_0=ruleModifier		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAttrDeclRule());
	        }
       		set(
       			$current, 
       			"modifier",
        		lv_modifier_0_0, 
        		"Modifier");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_attributeName_1_0=RULE_ID
		{
			newLeafNode(lv_attributeName_1_0, grammarAccess.getAttrDeclAccess().getAttributeNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAttrDeclRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"attributeName",
        		lv_attributeName_1_0, 
        		"ID");
	    }

)
)((	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getAttrDeclAccess().getColonKeyword_2_0_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAttrDeclAccess().getTypeTypeParserRuleCall_2_0_1_0()); 
	    }
		lv_type_3_0=ruleType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAttrDeclRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_3_0, 
        		"Type");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(	otherlv_4='=' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getAttrDeclAccess().getEqualsSignKeyword_2_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAttrDeclAccess().getLiteralLiteralParserRuleCall_2_1_1_0()); 
	    }
		lv_literal_5_0=ruleLiteral		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAttrDeclRule());
	        }
       		set(
       			$current, 
       			"literal",
        		lv_literal_5_0, 
        		"Literal");
	        afterParserOrEnumRuleCall();
	    }

)
))))
;





// Entry rule entryRuleModifier
entryRuleModifier returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getModifierRule()); } 
	 iv_ruleModifier=ruleModifier 
	 { $current=$iv_ruleModifier.current.getText(); }  
	 EOF 
;

// Rule Modifier
ruleModifier returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='const' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getModifierAccess().getConstKeyword_0()); 
    }

    |
	kw='val' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getModifierAccess().getValKeyword_1()); 
    }

    |
	kw='var' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getModifierAccess().getVarKeyword_2()); 
    }

    |
	kw='def' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getModifierAccess().getDefKeyword_3()); 
    }
)
    ;





// Entry rule entryRuleType
entryRuleType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTypeRule()); }
	 iv_ruleType=ruleType 
	 { $current=$iv_ruleType.current; } 
	 EOF 
;

// Rule Type
ruleType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
    {
        $current = forceCreateModelElement(
            grammarAccess.getTypeAccess().getBasicTypeAction_0_0(),
            $current);
    }
)(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getTypeRule());
	        }
        }
	otherlv_1=RULE_ID
	{
		newLeafNode(otherlv_1, grammarAccess.getTypeAccess().getBaseTypeTypeDeclCrossReference_0_1_0()); 
	}

)
)(((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getTypeAccess().getListTypeBaseAction_0_2_0_0(),
            $current);
    }
)	otherlv_3='[' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getTypeAccess().getLeftSquareBracketKeyword_0_2_0_1());
    }
	otherlv_4=']' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getTypeAccess().getRightSquareBracketKeyword_0_2_0_2());
    }
)
    |((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getTypeAccess().getSetTypeBaseAction_0_2_1_0(),
            $current);
    }
)	otherlv_6='{' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getTypeAccess().getLeftCurlyBracketKeyword_0_2_1_1());
    }
	otherlv_7='}' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getTypeAccess().getRightCurlyBracketKeyword_0_2_1_2());
    }
))*)
    |(	otherlv_8='<' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getTypeAccess().getLessThanSignKeyword_1_0());
    }
(
    {
        $current = forceCreateModelElement(
            grammarAccess.getTypeAccess().getTupleTypeAction_1_1(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getTypeAccess().getElemTypesTypeParserRuleCall_1_2_0()); 
	    }
		lv_elemTypes_10_0=ruleType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTypeRule());
	        }
       		add(
       			$current, 
       			"elemTypes",
        		lv_elemTypes_10_0, 
        		"Type");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_11='*' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getTypeAccess().getAsteriskKeyword_1_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTypeAccess().getElemTypesTypeParserRuleCall_1_3_1_0()); 
	    }
		lv_elemTypes_12_0=ruleType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTypeRule());
	        }
       		add(
       			$current, 
       			"elemTypes",
        		lv_elemTypes_12_0, 
        		"Type");
	        afterParserOrEnumRuleCall();
	    }

)
))+	otherlv_13='>' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getTypeAccess().getGreaterThanSignKeyword_1_4());
    }
))
;





// Entry rule entryRuleLiteral
entryRuleLiteral returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLiteralRule()); }
	 iv_ruleLiteral=ruleLiteral 
	 { $current=$iv_ruleLiteral.current; } 
	 EOF 
;

// Rule Literal
ruleLiteral returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getLiteralAccess().getBasicLiteralParserRuleCall_0()); 
    }
    this_BasicLiteral_0=ruleBasicLiteral
    { 
        $current = $this_BasicLiteral_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getLiteralAccess().getTupleLiteralParserRuleCall_1()); 
    }
    this_TupleLiteral_1=ruleTupleLiteral
    { 
        $current = $this_TupleLiteral_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getLiteralAccess().getListLiteralParserRuleCall_2()); 
    }
    this_ListLiteral_2=ruleListLiteral
    { 
        $current = $this_ListLiteral_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getLiteralAccess().getSetLiteralParserRuleCall_3()); 
    }
    this_SetLiteral_3=ruleSetLiteral
    { 
        $current = $this_SetLiteral_3.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleBasicLiteral
entryRuleBasicLiteral returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBasicLiteralRule()); }
	 iv_ruleBasicLiteral=ruleBasicLiteral 
	 { $current=$iv_ruleBasicLiteral.current; } 
	 EOF 
;

// Rule BasicLiteral
ruleBasicLiteral returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getBasicLiteralRule());
	        }
        }
	otherlv_0=RULE_ID
	{
		newLeafNode(otherlv_0, grammarAccess.getBasicLiteralAccess().getTypeConsTypeDeclCrossReference_0_0()); 
	}

)
)(
(
		lv_lit_1_0=RULE_LIT
		{
			newLeafNode(lv_lit_1_0, grammarAccess.getBasicLiteralAccess().getLitLITTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBasicLiteralRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"lit",
        		lv_lit_1_0, 
        		"LIT");
	    }

)
))
;





// Entry rule entryRuleTupleLiteral
entryRuleTupleLiteral returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTupleLiteralRule()); }
	 iv_ruleTupleLiteral=ruleTupleLiteral 
	 { $current=$iv_ruleTupleLiteral.current; } 
	 EOF 
;

// Rule TupleLiteral
ruleTupleLiteral returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='<' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getTupleLiteralAccess().getLessThanSignKeyword_0());
    }
(
    {
        $current = forceCreateModelElement(
            grammarAccess.getTupleLiteralAccess().getTupleLiteralAction_1(),
            $current);
    }
)((
(
		{ 
	        newCompositeNode(grammarAccess.getTupleLiteralAccess().getElemsLiteralParserRuleCall_2_0_0()); 
	    }
		lv_elems_2_0=ruleLiteral		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTupleLiteralRule());
	        }
       		add(
       			$current, 
       			"elems",
        		lv_elems_2_0, 
        		"Literal");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getTupleLiteralAccess().getCommaKeyword_2_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTupleLiteralAccess().getElemsLiteralParserRuleCall_2_1_1_0()); 
	    }
		lv_elems_4_0=ruleLiteral		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTupleLiteralRule());
	        }
       		add(
       			$current, 
       			"elems",
        		lv_elems_4_0, 
        		"Literal");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_5='>' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getTupleLiteralAccess().getGreaterThanSignKeyword_3());
    }
)
;





// Entry rule entryRuleListLiteral
entryRuleListLiteral returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getListLiteralRule()); }
	 iv_ruleListLiteral=ruleListLiteral 
	 { $current=$iv_ruleListLiteral.current; } 
	 EOF 
;

// Rule ListLiteral
ruleListLiteral returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getListLiteralRule());
	        }
        }
	otherlv_0=RULE_ID
	{
		newLeafNode(otherlv_0, grammarAccess.getListLiteralAccess().getTypeConsTypeDeclCrossReference_0_0()); 
	}

)
)	otherlv_1='[' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getListLiteralAccess().getLeftSquareBracketKeyword_1());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getListLiteralAccess().getElemsELiteralParserRuleCall_2_0_0()); 
	    }
		lv_elems_2_0=ruleELiteral		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getListLiteralRule());
	        }
       		add(
       			$current, 
       			"elems",
        		lv_elems_2_0, 
        		"ELiteral");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getListLiteralAccess().getCommaKeyword_2_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getListLiteralAccess().getElemsELiteralParserRuleCall_2_1_1_0()); 
	    }
		lv_elems_4_0=ruleELiteral		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getListLiteralRule());
	        }
       		add(
       			$current, 
       			"elems",
        		lv_elems_4_0, 
        		"ELiteral");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_5=']' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getListLiteralAccess().getRightSquareBracketKeyword_3());
    }
)
;





// Entry rule entryRuleSetLiteral
entryRuleSetLiteral returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSetLiteralRule()); }
	 iv_ruleSetLiteral=ruleSetLiteral 
	 { $current=$iv_ruleSetLiteral.current; } 
	 EOF 
;

// Rule SetLiteral
ruleSetLiteral returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getSetLiteralRule());
	        }
        }
	otherlv_0=RULE_ID
	{
		newLeafNode(otherlv_0, grammarAccess.getSetLiteralAccess().getTypeConsTypeDeclCrossReference_0_0()); 
	}

)
)	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getSetLiteralAccess().getLeftCurlyBracketKeyword_1());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getSetLiteralAccess().getElemsELiteralParserRuleCall_2_0_0()); 
	    }
		lv_elems_2_0=ruleELiteral		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSetLiteralRule());
	        }
       		add(
       			$current, 
       			"elems",
        		lv_elems_2_0, 
        		"ELiteral");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getSetLiteralAccess().getCommaKeyword_2_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSetLiteralAccess().getElemsELiteralParserRuleCall_2_1_1_0()); 
	    }
		lv_elems_4_0=ruleELiteral		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSetLiteralRule());
	        }
       		add(
       			$current, 
       			"elems",
        		lv_elems_4_0, 
        		"ELiteral");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_5='}' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getSetLiteralAccess().getRightCurlyBracketKeyword_3());
    }
)
;





// Entry rule entryRuleELiteral
entryRuleELiteral returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getELiteralRule()); }
	 iv_ruleELiteral=ruleELiteral 
	 { $current=$iv_ruleELiteral.current; } 
	 EOF 
;

// Rule ELiteral
ruleELiteral returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		lv_lit_0_0=RULE_LIT
		{
			newLeafNode(lv_lit_0_0, grammarAccess.getELiteralAccess().getLitLITTerminalRuleCall_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getELiteralRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"lit",
        		lv_lit_0_0, 
        		"LIT");
	    }

)
)
;





// Entry rule entryRuleSubFeaturesDecl
entryRuleSubFeaturesDecl returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSubFeaturesDeclRule()); }
	 iv_ruleSubFeaturesDecl=ruleSubFeaturesDecl 
	 { $current=$iv_ruleSubFeaturesDecl.current; } 
	 EOF 
;

// Rule SubFeaturesDecl
ruleSubFeaturesDecl returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
(
		lv_categoryNames_0_0=RULE_ID
		{
			newLeafNode(lv_categoryNames_0_0, grammarAccess.getSubFeaturesDeclAccess().getCategoryNamesIDTerminalRuleCall_0_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSubFeaturesDeclRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"categoryNames",
        		lv_categoryNames_0_0, 
        		"ID");
	    }

)
)	otherlv_1='.' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getSubFeaturesDeclAccess().getFullStopKeyword_0_1());
    }
)*(
(
		lv_name_2_0=RULE_ID
		{
			newLeafNode(lv_name_2_0, grammarAccess.getSubFeaturesDeclAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSubFeaturesDeclRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"ID");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getSubFeaturesDeclAccess().getTypeSubFeaturesTypeParserRuleCall_2_0()); 
	    }
		lv_type_3_0=ruleSubFeaturesType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSubFeaturesDeclRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_3_0, 
        		"SubFeaturesType");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleSubFeaturesType
entryRuleSubFeaturesType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSubFeaturesTypeRule()); }
	 iv_ruleSubFeaturesType=ruleSubFeaturesType 
	 { $current=$iv_ruleSubFeaturesType.current; } 
	 EOF 
;

// Rule SubFeaturesType
ruleSubFeaturesType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((	otherlv_0=':' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSubFeaturesTypeAccess().getColonKeyword_0_0());
    }
(
    {
        $current = forceCreateModelElement(
            grammarAccess.getSubFeaturesTypeAccess().getSubGroupTypeRefAction_0_1(),
            $current);
    }
)(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getSubFeaturesTypeRule());
	        }
        }
	otherlv_2=RULE_ID
	{
		newLeafNode(otherlv_2, grammarAccess.getSubFeaturesTypeAccess().getTypeFeaturesDeclCrossReference_0_2_0()); 
	}

)
))
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getSubFeaturesTypeAccess().getSubGroupTypeAnonAction_1_0(),
            $current);
    }
)(	otherlv_4='<:' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getSubFeaturesTypeAccess().getLessThanSignColonKeyword_1_1_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getSubFeaturesTypeRule());
	        }
        }
	otherlv_5=RULE_ID
	{
		newLeafNode(otherlv_5, grammarAccess.getSubFeaturesTypeAccess().getSupersFeaturesDeclCrossReference_1_1_1_0()); 
	}

)
)(	otherlv_6=',' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getSubFeaturesTypeAccess().getCommaKeyword_1_1_2_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getSubFeaturesTypeRule());
	        }
        }
	otherlv_7=RULE_ID
	{
		newLeafNode(otherlv_7, grammarAccess.getSubFeaturesTypeAccess().getSupersFeaturesDeclCrossReference_1_1_2_1_0()); 
	}

)
))*)?	otherlv_8='=' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getSubFeaturesTypeAccess().getEqualsSignKeyword_1_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSubFeaturesTypeAccess().getBodyFeaturesBodyParserRuleCall_1_3_0()); 
	    }
		lv_body_9_0=ruleFeaturesBody		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSubFeaturesTypeRule());
	        }
       		set(
       			$current, 
       			"body",
        		lv_body_9_0, 
        		"FeaturesBody");
	        afterParserOrEnumRuleCall();
	    }

)
)))
;





RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_LIT : '(' ( options {greedy=false;} : . )*')';

RULE_NAT : ('0'|'1'..'9' ('0'..'9')*);

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;


