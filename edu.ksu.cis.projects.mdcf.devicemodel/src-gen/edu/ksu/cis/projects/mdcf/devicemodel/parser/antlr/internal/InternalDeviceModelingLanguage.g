/*
* generated by Xtext
*/
grammar InternalDeviceModelingLanguage;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package edu.ksu.cis.projects.mdcf.devicemodel.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package edu.ksu.cis.projects.mdcf.devicemodel.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import edu.ksu.cis.projects.mdcf.devicemodel.services.DeviceModelingLanguageGrammarAccess;

}

@parser::members {

 	private DeviceModelingLanguageGrammarAccess grammarAccess;
 	
    public InternalDeviceModelingLanguageParser(TokenStream input, DeviceModelingLanguageGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "Model";	
   	}
   	
   	@Override
   	protected DeviceModelingLanguageGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleModel
entryRuleModel returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getModelRule()); }
	 iv_ruleModel=ruleModel 
	 { $current=$iv_ruleModel.current; } 
	 EOF 
;

// Rule Model
ruleModel returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
(
		lv_schema_0_0=	'Schema' 
    {
        newLeafNode(lv_schema_0_0, grammarAccess.getModelAccess().getSchemaSchemaKeyword_0_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getModelRule());
	        }
       		setWithLastConsumed($current, "schema", true, "Schema");
	    }

)
)
    |(
(
		lv_class_1_0=	'Class' 
    {
        newLeafNode(lv_class_1_0, grammarAccess.getModelAccess().getClassClassKeyword_0_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getModelRule());
	        }
       		setWithLastConsumed($current, "class", true, "Class");
	    }

)
)
    |(
(
		lv_instance_2_0=	'Instance' 
    {
        newLeafNode(lv_instance_2_0, grammarAccess.getModelAccess().getInstanceInstanceKeyword_0_2_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getModelRule());
	        }
       		setWithLastConsumed($current, "instance", true, "Instance");
	    }

)
))?(
(
		{ 
	        newCompositeNode(grammarAccess.getModelAccess().getDeclsDeclParserRuleCall_1_0()); 
	    }
		lv_decls_3_0=ruleDecl		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModelRule());
	        }
       		add(
       			$current, 
       			"decls",
        		lv_decls_3_0, 
        		"Decl");
	        afterParserOrEnumRuleCall();
	    }

)
)*)
;





// Entry rule entryRuleDecl
entryRuleDecl returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDeclRule()); }
	 iv_ruleDecl=ruleDecl 
	 { $current=$iv_ruleDecl.current; } 
	 EOF 
;

// Rule Decl
ruleDecl returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getDeclAccess().getTypeDeclParserRuleCall_0()); 
    }
    this_TypeDecl_0=ruleTypeDecl
    { 
        $current = $this_TypeDecl_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getDeclAccess().getFeatureDeclParserRuleCall_1()); 
    }
    this_FeatureDecl_1=ruleFeatureDecl
    { 
        $current = $this_FeatureDecl_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleTypeDecl
entryRuleTypeDecl returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTypeDeclRule()); }
	 iv_ruleTypeDecl=ruleTypeDecl 
	 { $current=$iv_ruleTypeDecl.current; } 
	 EOF 
;

// Rule TypeDecl
ruleTypeDecl returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='type' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getTypeDeclAccess().getTypeKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getTypeDeclAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTypeDeclRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)(	otherlv_2='extends' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getTypeDeclAccess().getExtendsKeyword_2_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getTypeDeclRule());
	        }
        }
	otherlv_3=RULE_ID
	{
		newLeafNode(otherlv_3, grammarAccess.getTypeDeclAccess().getSupersTypeDeclCrossReference_2_1_0()); 
	}

)
)(	otherlv_4='with' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getTypeDeclAccess().getWithKeyword_2_2_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getTypeDeclRule());
	        }
        }
	otherlv_5=RULE_ID
	{
		newLeafNode(otherlv_5, grammarAccess.getTypeDeclAccess().getSupersTypeDeclCrossReference_2_2_1_0()); 
	}

)
))*)?)
;





// Entry rule entryRuleFeatureDecl
entryRuleFeatureDecl returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFeatureDeclRule()); }
	 iv_ruleFeatureDecl=ruleFeatureDecl 
	 { $current=$iv_ruleFeatureDecl.current; } 
	 EOF 
;

// Rule FeatureDecl
ruleFeatureDecl returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((	otherlv_0='feature' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getFeatureDeclAccess().getFeatureKeyword_0_0_0());
    }
(
    {
        $current = forceCreateModelElement(
            grammarAccess.getFeatureDeclAccess().getFeatureAction_0_0_1(),
            $current);
    }
)((
(
		lv_schema_2_0=	'schema' 
    {
        newLeafNode(lv_schema_2_0, grammarAccess.getFeatureDeclAccess().getSchemaSchemaKeyword_0_0_2_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFeatureDeclRule());
	        }
       		setWithLastConsumed($current, "schema", true, "schema");
	    }

)
)
    |(
(
		lv_class_3_0=	'class' 
    {
        newLeafNode(lv_class_3_0, grammarAccess.getFeatureDeclAccess().getClassClassKeyword_0_0_2_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFeatureDeclRule());
	        }
       		setWithLastConsumed($current, "class", true, "class");
	    }

)
)
    |(
(
		lv_instance_4_0=	'instance' 
    {
        newLeafNode(lv_instance_4_0, grammarAccess.getFeatureDeclAccess().getInstanceInstanceKeyword_0_0_2_2_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFeatureDeclRule());
	        }
       		setWithLastConsumed($current, "instance", true, "instance");
	    }

)
))?)
    |(	otherlv_5='data' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getFeatureDeclAccess().getDataKeyword_0_1_0());
    }
(
    {
        $current = forceCreateModelElement(
            grammarAccess.getFeatureDeclAccess().getDataAction_0_1_1(),
            $current);
    }
))
    |(	otherlv_7='device' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getFeatureDeclAccess().getDeviceKeyword_0_2_0());
    }
(
    {
        $current = forceCreateModelElement(
            grammarAccess.getFeatureDeclAccess().getDeviceAction_0_2_1(),
            $current);
    }
))
    |(	otherlv_9='app' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getFeatureDeclAccess().getAppKeyword_0_3_0());
    }
(
    {
        $current = forceCreateModelElement(
            grammarAccess.getFeatureDeclAccess().getAppAction_0_3_1(),
            $current);
    }
)))(
(
		lv_name_11_0=RULE_ID
		{
			newLeafNode(lv_name_11_0, grammarAccess.getFeatureDeclAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFeatureDeclRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_11_0, 
        		"ID");
	    }

)
)(	otherlv_12='extends' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getFeatureDeclAccess().getExtendsKeyword_2_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getFeatureDeclRule());
	        }
        }
	otherlv_13=RULE_ID
	{
		newLeafNode(otherlv_13, grammarAccess.getFeatureDeclAccess().getSupersFeatureDeclCrossReference_2_1_0()); 
	}

)
)(	otherlv_14='with' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getFeatureDeclAccess().getWithKeyword_2_2_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getFeatureDeclRule());
	        }
        }
	otherlv_15=RULE_ID
	{
		newLeafNode(otherlv_15, grammarAccess.getFeatureDeclAccess().getSupersFeatureDeclCrossReference_2_2_1_0()); 
	}

)
))*)?(	otherlv_16='{' 
    {
    	newLeafNode(otherlv_16, grammarAccess.getFeatureDeclAccess().getLeftCurlyBracketKeyword_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFeatureDeclAccess().getMembersMemberDeclParserRuleCall_3_1_0()); 
	    }
		lv_members_17_0=ruleMemberDecl		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFeatureDeclRule());
	        }
       		add(
       			$current, 
       			"members",
        		lv_members_17_0, 
        		"MemberDecl");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_18='}' 
    {
    	newLeafNode(otherlv_18, grammarAccess.getFeatureDeclAccess().getRightCurlyBracketKeyword_3_2());
    }
)?(	otherlv_19='requires' 
    {
    	newLeafNode(otherlv_19, grammarAccess.getFeatureDeclAccess().getRequiresKeyword_4_0());
    }
	otherlv_20='{' 
    {
    	newLeafNode(otherlv_20, grammarAccess.getFeatureDeclAccess().getLeftCurlyBracketKeyword_4_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFeatureDeclAccess().getDevicesDeviceParserRuleCall_4_2_0()); 
	    }
		lv_devices_21_0=ruleDevice		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFeatureDeclRule());
	        }
       		add(
       			$current, 
       			"devices",
        		lv_devices_21_0, 
        		"Device");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getFeatureDeclAccess().getAssignsAssignmentParserRuleCall_4_3_0()); 
	    }
		lv_assigns_22_0=ruleAssignment		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFeatureDeclRule());
	        }
       		add(
       			$current, 
       			"assigns",
        		lv_assigns_22_0, 
        		"Assignment");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getFeatureDeclAccess().getExpExpParserRuleCall_4_4_0()); 
	    }
		lv_exp_23_0=ruleExp		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFeatureDeclRule());
	        }
       		set(
       			$current, 
       			"exp",
        		lv_exp_23_0, 
        		"Exp");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_24='}' 
    {
    	newLeafNode(otherlv_24, grammarAccess.getFeatureDeclAccess().getRightCurlyBracketKeyword_4_5());
    }
)?)
;





// Entry rule entryRuleMemberDecl
entryRuleMemberDecl returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMemberDeclRule()); }
	 iv_ruleMemberDecl=ruleMemberDecl 
	 { $current=$iv_ruleMemberDecl.current; } 
	 EOF 
;

// Rule MemberDecl
ruleMemberDecl returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getMemberDeclAccess().getAttrDeclParserRuleCall_0()); 
    }
    this_AttrDecl_0=ruleAttrDecl
    { 
        $current = $this_AttrDecl_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getMemberDeclAccess().getSubMemberDeclParserRuleCall_1()); 
    }
    this_SubMemberDecl_1=ruleSubMemberDecl
    { 
        $current = $this_SubMemberDecl_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getMemberDeclAccess().getInvariantDeclParserRuleCall_2()); 
    }
    this_InvariantDecl_2=ruleInvariantDecl
    { 
        $current = $this_InvariantDecl_2.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleAttrDecl
entryRuleAttrDecl returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAttrDeclRule()); }
	 iv_ruleAttrDecl=ruleAttrDecl 
	 { $current=$iv_ruleAttrDecl.current; } 
	 EOF 
;

// Rule AttrDecl
ruleAttrDecl returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getAttrDeclAccess().getModifierModifierParserRuleCall_0_0()); 
	    }
		lv_modifier_0_0=ruleModifier		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAttrDeclRule());
	        }
       		set(
       			$current, 
       			"modifier",
        		lv_modifier_0_0, 
        		"Modifier");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_attributeName_1_0=RULE_ID
		{
			newLeafNode(lv_attributeName_1_0, grammarAccess.getAttrDeclAccess().getAttributeNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAttrDeclRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"attributeName",
        		lv_attributeName_1_0, 
        		"ID");
	    }

)
)((	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getAttrDeclAccess().getColonKeyword_2_0_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAttrDeclAccess().getTypeTypeParserRuleCall_2_0_1_0()); 
	    }
		lv_type_3_0=ruleType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAttrDeclRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_3_0, 
        		"Type");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_4='=' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getAttrDeclAccess().getEqualsSignKeyword_2_0_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAttrDeclAccess().getLiteralLiteralParserRuleCall_2_0_2_1_0()); 
	    }
		lv_literal_5_0=ruleLiteral		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAttrDeclRule());
	        }
       		set(
       			$current, 
       			"literal",
        		lv_literal_5_0, 
        		"Literal");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
    |(	otherlv_6='=' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getAttrDeclAccess().getEqualsSignKeyword_2_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAttrDeclAccess().getLiteralLiteralParserRuleCall_2_1_1_0()); 
	    }
		lv_literal_7_0=ruleLiteral		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAttrDeclRule());
	        }
       		set(
       			$current, 
       			"literal",
        		lv_literal_7_0, 
        		"Literal");
	        afterParserOrEnumRuleCall();
	    }

)
))))
;





// Entry rule entryRuleModifier
entryRuleModifier returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getModifierRule()); }
	 iv_ruleModifier=ruleModifier 
	 { $current=$iv_ruleModifier.current; } 
	 EOF 
;

// Rule Modifier
ruleModifier returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((	otherlv_0='const' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getModifierAccess().getConstKeyword_0_0());
    }
(
    {
        $current = forceCreateModelElement(
            grammarAccess.getModifierAccess().getConstAction_0_1(),
            $current);
    }
)((
(
		lv_schema_2_0=	'schema' 
    {
        newLeafNode(lv_schema_2_0, grammarAccess.getModifierAccess().getSchemaSchemaKeyword_0_2_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getModifierRule());
	        }
       		setWithLastConsumed($current, "schema", true, "schema");
	    }

)
)
    |(
(
		lv_class_3_0=	'class' 
    {
        newLeafNode(lv_class_3_0, grammarAccess.getModifierAccess().getClassClassKeyword_0_2_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getModifierRule());
	        }
       		setWithLastConsumed($current, "class", true, "class");
	    }

)
)
    |(
(
		lv_instance_4_0=	'instance' 
    {
        newLeafNode(lv_instance_4_0, grammarAccess.getModifierAccess().getInstanceInstanceKeyword_0_2_2_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getModifierRule());
	        }
       		setWithLastConsumed($current, "instance", true, "instance");
	    }

)
))?)
    |(	otherlv_5='val' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getModifierAccess().getValKeyword_1_0());
    }
(
    {
        $current = forceCreateModelElement(
            grammarAccess.getModifierAccess().getValAction_1_1(),
            $current);
    }
))
    |(	otherlv_7='var' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getModifierAccess().getVarKeyword_2_0());
    }
(
    {
        $current = forceCreateModelElement(
            grammarAccess.getModifierAccess().getVarAction_2_1(),
            $current);
    }
))
    |(	otherlv_9='override' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getModifierAccess().getOverrideKeyword_3_0());
    }
(
    {
        $current = forceCreateModelElement(
            grammarAccess.getModifierAccess().getOverrideAction_3_1(),
            $current);
    }
)))
;





// Entry rule entryRuleSubMemberDecl
entryRuleSubMemberDecl returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSubMemberDeclRule()); }
	 iv_ruleSubMemberDecl=ruleSubMemberDecl 
	 { $current=$iv_ruleSubMemberDecl.current; } 
	 EOF 
;

// Rule SubMemberDecl
ruleSubMemberDecl returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getSubMemberDeclAccess().getModifierMModifierParserRuleCall_0_0()); 
	    }
		lv_modifier_0_0=ruleMModifier		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSubMemberDeclRule());
	        }
       		set(
       			$current, 
       			"modifier",
        		lv_modifier_0_0, 
        		"MModifier");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getSubMemberDeclAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSubMemberDeclRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getSubMemberDeclAccess().getColonKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSubMemberDeclAccess().getTypeFeatureTypeParserRuleCall_3_0()); 
	    }
		lv_type_3_0=ruleFeatureType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSubMemberDeclRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_3_0, 
        		"FeatureType");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleMModifier
entryRuleMModifier returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMModifierRule()); }
	 iv_ruleMModifier=ruleMModifier 
	 { $current=$iv_ruleMModifier.current; } 
	 EOF 
;

// Rule MModifier
ruleMModifier returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((	otherlv_0='Const' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getMModifierAccess().getConstKeyword_0_0());
    }
(
    {
        $current = forceCreateModelElement(
            grammarAccess.getMModifierAccess().getConstAction_0_1(),
            $current);
    }
)((
(
		lv_schema_2_0=	'Schema' 
    {
        newLeafNode(lv_schema_2_0, grammarAccess.getMModifierAccess().getSchemaSchemaKeyword_0_2_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMModifierRule());
	        }
       		setWithLastConsumed($current, "schema", true, "Schema");
	    }

)
)
    |(
(
		lv_class_3_0=	'Class' 
    {
        newLeafNode(lv_class_3_0, grammarAccess.getMModifierAccess().getClassClassKeyword_0_2_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMModifierRule());
	        }
       		setWithLastConsumed($current, "class", true, "Class");
	    }

)
)
    |(
(
		lv_instance_4_0=	'Instance' 
    {
        newLeafNode(lv_instance_4_0, grammarAccess.getMModifierAccess().getInstanceInstanceKeyword_0_2_2_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMModifierRule());
	        }
       		setWithLastConsumed($current, "instance", true, "Instance");
	    }

)
))?)
    |(	otherlv_5='Val' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getMModifierAccess().getValKeyword_1_0());
    }
(
    {
        $current = forceCreateModelElement(
            grammarAccess.getMModifierAccess().getValAction_1_1(),
            $current);
    }
))
    |(	otherlv_7='Var' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getMModifierAccess().getVarKeyword_2_0());
    }
(
    {
        $current = forceCreateModelElement(
            grammarAccess.getMModifierAccess().getVarAction_2_1(),
            $current);
    }
))
    |(	otherlv_9='Override' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getMModifierAccess().getOverrideKeyword_3_0());
    }
(
    {
        $current = forceCreateModelElement(
            grammarAccess.getMModifierAccess().getOverrideAction_3_1(),
            $current);
    }
))
    |(	otherlv_11='Data' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getMModifierAccess().getDataKeyword_4_0());
    }
(
    {
        $current = forceCreateModelElement(
            grammarAccess.getMModifierAccess().getDataAction_4_1(),
            $current);
    }
)))
;





// Entry rule entryRuleAssignment
entryRuleAssignment returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAssignmentRule()); }
	 iv_ruleAssignment=ruleAssignment 
	 { $current=$iv_ruleAssignment.current; } 
	 EOF 
;

// Rule Assignment
ruleAssignment returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=RULE_ID
		{
			newLeafNode(lv_name_0_0, grammarAccess.getAssignmentAccess().getNameIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAssignmentRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"ID");
	    }

)
)	otherlv_1='=' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getAssignmentAccess().getEqualsSignKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAssignmentAccess().getExpExpParserRuleCall_2_0()); 
	    }
		lv_exp_2_0=ruleExp		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAssignmentRule());
	        }
       		set(
       			$current, 
       			"exp",
        		lv_exp_2_0, 
        		"Exp");
	        afterParserOrEnumRuleCall();
	    }

)
))
;







// Entry rule entryRuleFeatureType
entryRuleFeatureType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFeatureTypeRule()); }
	 iv_ruleFeatureType=ruleFeatureType 
	 { $current=$iv_ruleFeatureType.current; } 
	 EOF 
;

// Rule FeatureType
ruleFeatureType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getFeatureTypeAccess().getBaseFeatureTypeParserRuleCall_0()); 
    }
    this_BaseFeatureType_0=ruleBaseFeatureType
    { 
        $current = $this_BaseFeatureType_0.current; 
        afterParserOrEnumRuleCall();
    }

    |(	otherlv_1='Option' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getFeatureTypeAccess().getOptionKeyword_1_0());
    }
(
    {
        $current = forceCreateModelElement(
            grammarAccess.getFeatureTypeAccess().getOptionFeatureTypeAction_1_1(),
            $current);
    }
)	otherlv_3='[' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getFeatureTypeAccess().getLeftSquareBracketKeyword_1_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFeatureTypeAccess().getBaseBaseFeatureTypeParserRuleCall_1_3_0()); 
	    }
		lv_base_4_0=ruleBaseFeatureType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFeatureTypeRule());
	        }
       		set(
       			$current, 
       			"base",
        		lv_base_4_0, 
        		"BaseFeatureType");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_5=']' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getFeatureTypeAccess().getRightSquareBracketKeyword_1_4());
    }
(	otherlv_6='=' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getFeatureTypeAccess().getEqualsSignKeyword_1_5_0());
    }
(
(
		lv_none_7_0=	'None' 
    {
        newLeafNode(lv_none_7_0, grammarAccess.getFeatureTypeAccess().getNoneNoneKeyword_1_5_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFeatureTypeRule());
	        }
       		setWithLastConsumed($current, "none", true, "None");
	    }

)
))?)
    |(	otherlv_8='Some' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getFeatureTypeAccess().getSomeKeyword_2_0());
    }
(
    {
        $current = forceCreateModelElement(
            grammarAccess.getFeatureTypeAccess().getSomeFeatureTypeAction_2_1(),
            $current);
    }
)	otherlv_10='[' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getFeatureTypeAccess().getLeftSquareBracketKeyword_2_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFeatureTypeAccess().getBaseBaseFeatureTypeParserRuleCall_2_3_0()); 
	    }
		lv_base_11_0=ruleBaseFeatureType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFeatureTypeRule());
	        }
       		set(
       			$current, 
       			"base",
        		lv_base_11_0, 
        		"BaseFeatureType");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_12=']' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getFeatureTypeAccess().getRightSquareBracketKeyword_2_4());
    }
(	otherlv_13='=' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getFeatureTypeAccess().getEqualsSignKeyword_2_5_0());
    }
	otherlv_14='{' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getFeatureTypeAccess().getLeftCurlyBracketKeyword_2_5_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFeatureTypeAccess().getMembersMemberDeclParserRuleCall_2_5_2_0()); 
	    }
		lv_members_15_0=ruleMemberDecl		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFeatureTypeRule());
	        }
       		add(
       			$current, 
       			"members",
        		lv_members_15_0, 
        		"MemberDecl");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_16='}' 
    {
    	newLeafNode(otherlv_16, grammarAccess.getFeatureTypeAccess().getRightCurlyBracketKeyword_2_5_3());
    }
)?)
    |(	otherlv_17='Either' 
    {
    	newLeafNode(otherlv_17, grammarAccess.getFeatureTypeAccess().getEitherKeyword_3_0());
    }
(
    {
        $current = forceCreateModelElement(
            grammarAccess.getFeatureTypeAccess().getEitherFeatureTypeAction_3_1(),
            $current);
    }
)	otherlv_19='[' 
    {
    	newLeafNode(otherlv_19, grammarAccess.getFeatureTypeAccess().getLeftSquareBracketKeyword_3_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFeatureTypeAccess().getBasesBaseFeatureTypeParserRuleCall_3_3_0()); 
	    }
		lv_bases_20_0=ruleBaseFeatureType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFeatureTypeRule());
	        }
       		add(
       			$current, 
       			"bases",
        		lv_bases_20_0, 
        		"BaseFeatureType");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_21=',' 
    {
    	newLeafNode(otherlv_21, grammarAccess.getFeatureTypeAccess().getCommaKeyword_3_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFeatureTypeAccess().getBasesBaseFeatureTypeParserRuleCall_3_4_1_0()); 
	    }
		lv_bases_22_0=ruleBaseFeatureType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFeatureTypeRule());
	        }
       		add(
       			$current, 
       			"bases",
        		lv_bases_22_0, 
        		"BaseFeatureType");
	        afterParserOrEnumRuleCall();
	    }

)
))+	otherlv_23=']' 
    {
    	newLeafNode(otherlv_23, grammarAccess.getFeatureTypeAccess().getRightSquareBracketKeyword_3_5());
    }
(	otherlv_24='=' 
    {
    	newLeafNode(otherlv_24, grammarAccess.getFeatureTypeAccess().getEqualsSignKeyword_3_6_0());
    }
(
(
		lv_choice_25_0=RULE_NAT
		{
			newLeafNode(lv_choice_25_0, grammarAccess.getFeatureTypeAccess().getChoiceNATTerminalRuleCall_3_6_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFeatureTypeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"choice",
        		lv_choice_25_0, 
        		"NAT");
	    }

)
)	otherlv_26='{' 
    {
    	newLeafNode(otherlv_26, grammarAccess.getFeatureTypeAccess().getLeftCurlyBracketKeyword_3_6_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFeatureTypeAccess().getMembersMemberDeclParserRuleCall_3_6_3_0()); 
	    }
		lv_members_27_0=ruleMemberDecl		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFeatureTypeRule());
	        }
       		add(
       			$current, 
       			"members",
        		lv_members_27_0, 
        		"MemberDecl");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_28='}' 
    {
    	newLeafNode(otherlv_28, grammarAccess.getFeatureTypeAccess().getRightCurlyBracketKeyword_3_6_4());
    }
)?)
    |(	otherlv_29='Seq' 
    {
    	newLeafNode(otherlv_29, grammarAccess.getFeatureTypeAccess().getSeqKeyword_4_0());
    }
(
    {
        $current = forceCreateModelElement(
            grammarAccess.getFeatureTypeAccess().getSeqFeatureTypeAction_4_1(),
            $current);
    }
)	otherlv_31='[' 
    {
    	newLeafNode(otherlv_31, grammarAccess.getFeatureTypeAccess().getLeftSquareBracketKeyword_4_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFeatureTypeAccess().getBaseBaseFeatureTypeParserRuleCall_4_3_0()); 
	    }
		lv_base_32_0=ruleBaseFeatureType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFeatureTypeRule());
	        }
       		set(
       			$current, 
       			"base",
        		lv_base_32_0, 
        		"BaseFeatureType");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_33=']' 
    {
    	newLeafNode(otherlv_33, grammarAccess.getFeatureTypeAccess().getRightSquareBracketKeyword_4_4());
    }
(	otherlv_34='=' 
    {
    	newLeafNode(otherlv_34, grammarAccess.getFeatureTypeAccess().getEqualsSignKeyword_4_5_0());
    }
	otherlv_35='[' 
    {
    	newLeafNode(otherlv_35, grammarAccess.getFeatureTypeAccess().getLeftSquareBracketKeyword_4_5_1());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getFeatureTypeAccess().getElementsBaseFeatureTypeParserRuleCall_4_5_2_0_0()); 
	    }
		lv_elements_36_0=ruleBaseFeatureType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFeatureTypeRule());
	        }
       		add(
       			$current, 
       			"elements",
        		lv_elements_36_0, 
        		"BaseFeatureType");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_37=',' 
    {
    	newLeafNode(otherlv_37, grammarAccess.getFeatureTypeAccess().getCommaKeyword_4_5_2_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFeatureTypeAccess().getElementsBaseFeatureTypeParserRuleCall_4_5_2_1_1_0()); 
	    }
		lv_elements_38_0=ruleBaseFeatureType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFeatureTypeRule());
	        }
       		add(
       			$current, 
       			"elements",
        		lv_elements_38_0, 
        		"BaseFeatureType");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_39=']' 
    {
    	newLeafNode(otherlv_39, grammarAccess.getFeatureTypeAccess().getRightSquareBracketKeyword_4_5_3());
    }
)?)
    |(	otherlv_40='Set' 
    {
    	newLeafNode(otherlv_40, grammarAccess.getFeatureTypeAccess().getSetKeyword_5_0());
    }
(
    {
        $current = forceCreateModelElement(
            grammarAccess.getFeatureTypeAccess().getSetFeatureTypeAction_5_1(),
            $current);
    }
)	otherlv_42='[' 
    {
    	newLeafNode(otherlv_42, grammarAccess.getFeatureTypeAccess().getLeftSquareBracketKeyword_5_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFeatureTypeAccess().getBaseBaseFeatureTypeParserRuleCall_5_3_0()); 
	    }
		lv_base_43_0=ruleBaseFeatureType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFeatureTypeRule());
	        }
       		set(
       			$current, 
       			"base",
        		lv_base_43_0, 
        		"BaseFeatureType");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_44=']' 
    {
    	newLeafNode(otherlv_44, grammarAccess.getFeatureTypeAccess().getRightSquareBracketKeyword_5_4());
    }
(	otherlv_45='=' 
    {
    	newLeafNode(otherlv_45, grammarAccess.getFeatureTypeAccess().getEqualsSignKeyword_5_5_0());
    }
	otherlv_46='{' 
    {
    	newLeafNode(otherlv_46, grammarAccess.getFeatureTypeAccess().getLeftCurlyBracketKeyword_5_5_1());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getFeatureTypeAccess().getElementsBaseFeatureTypeParserRuleCall_5_5_2_0_0()); 
	    }
		lv_elements_47_0=ruleBaseFeatureType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFeatureTypeRule());
	        }
       		add(
       			$current, 
       			"elements",
        		lv_elements_47_0, 
        		"BaseFeatureType");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_48=',' 
    {
    	newLeafNode(otherlv_48, grammarAccess.getFeatureTypeAccess().getCommaKeyword_5_5_2_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFeatureTypeAccess().getElementsBaseFeatureTypeParserRuleCall_5_5_2_1_1_0()); 
	    }
		lv_elements_49_0=ruleBaseFeatureType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFeatureTypeRule());
	        }
       		add(
       			$current, 
       			"elements",
        		lv_elements_49_0, 
        		"BaseFeatureType");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_50='}' 
    {
    	newLeafNode(otherlv_50, grammarAccess.getFeatureTypeAccess().getRightCurlyBracketKeyword_5_5_3());
    }
)?))
;





// Entry rule entryRuleBaseFeatureType
entryRuleBaseFeatureType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBaseFeatureTypeRule()); }
	 iv_ruleBaseFeatureType=ruleBaseFeatureType 
	 { $current=$iv_ruleBaseFeatureType.current; } 
	 EOF 
;

// Rule BaseFeatureType
ruleBaseFeatureType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getBaseFeatureTypeRule());
	        }
        }
	otherlv_0=RULE_ID
	{
		newLeafNode(otherlv_0, grammarAccess.getBaseFeatureTypeAccess().getComponentsFeatureDeclCrossReference_0_0()); 
	}

)
)(	otherlv_1='with' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getBaseFeatureTypeAccess().getWithKeyword_1_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getBaseFeatureTypeRule());
	        }
        }
	otherlv_2=RULE_ID
	{
		newLeafNode(otherlv_2, grammarAccess.getBaseFeatureTypeAccess().getComponentsFeatureDeclCrossReference_1_1_0()); 
	}

)
))*(	otherlv_3='=' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getBaseFeatureTypeAccess().getEqualsSignKeyword_2_0());
    }
	otherlv_4='{' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getBaseFeatureTypeAccess().getLeftCurlyBracketKeyword_2_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBaseFeatureTypeAccess().getMembersMemberDeclParserRuleCall_2_2_0()); 
	    }
		lv_members_5_0=ruleMemberDecl		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBaseFeatureTypeRule());
	        }
       		add(
       			$current, 
       			"members",
        		lv_members_5_0, 
        		"MemberDecl");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_6='}' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getBaseFeatureTypeAccess().getRightCurlyBracketKeyword_2_3());
    }
)?)
;





// Entry rule entryRuleInvariantDecl
entryRuleInvariantDecl returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInvariantDeclRule()); }
	 iv_ruleInvariantDecl=ruleInvariantDecl 
	 { $current=$iv_ruleInvariantDecl.current; } 
	 EOF 
;

// Rule InvariantDecl
ruleInvariantDecl returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getInvariantDeclAccess().getMultiplicityInvariantParserRuleCall_0()); 
    }
    this_MultiplicityInvariant_0=ruleMultiplicityInvariant
    { 
        $current = $this_MultiplicityInvariant_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getInvariantDeclAccess().getGeneralInvariantParserRuleCall_1()); 
    }
    this_GeneralInvariant_1=ruleGeneralInvariant
    { 
        $current = $this_GeneralInvariant_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleMultiplicityInvariant
entryRuleMultiplicityInvariant returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMultiplicityInvariantRule()); }
	 iv_ruleMultiplicityInvariant=ruleMultiplicityInvariant 
	 { $current=$iv_ruleMultiplicityInvariant.current; } 
	 EOF 
;

// Rule MultiplicityInvariant
ruleMultiplicityInvariant returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='inv' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getMultiplicityInvariantAccess().getInvKeyword_0());
    }
((
(
		lv_invName_1_0=RULE_ID
		{
			newLeafNode(lv_invName_1_0, grammarAccess.getMultiplicityInvariantAccess().getInvNameIDTerminalRuleCall_1_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMultiplicityInvariantRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"invName",
        		lv_invName_1_0, 
        		"ID");
	    }

)
)	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getMultiplicityInvariantAccess().getColonKeyword_1_1());
    }
)?((
(
		{ 
	        newCompositeNode(grammarAccess.getMultiplicityInvariantAccess().getLoConstraintNatParserRuleCall_2_0_0()); 
	    }
		lv_lo_3_0=ruleConstraintNat		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMultiplicityInvariantRule());
	        }
       		set(
       			$current, 
       			"lo",
        		lv_lo_3_0, 
        		"ConstraintNat");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4='..' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getMultiplicityInvariantAccess().getFullStopFullStopKeyword_2_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMultiplicityInvariantAccess().getHiConstraintNatParserRuleCall_2_2_0()); 
	    }
		lv_hi_5_0=ruleConstraintNat		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMultiplicityInvariantRule());
	        }
       		set(
       			$current, 
       			"hi",
        		lv_hi_5_0, 
        		"ConstraintNat");
	        afterParserOrEnumRuleCall();
	    }

)
))(
(
		{ 
	        newCompositeNode(grammarAccess.getMultiplicityInvariantAccess().getMatchSubMemberMatchParserRuleCall_3_0()); 
	    }
		lv_match_6_0=ruleSubMemberMatch		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMultiplicityInvariantRule());
	        }
       		set(
       			$current, 
       			"match",
        		lv_match_6_0, 
        		"SubMemberMatch");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_7=':' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getMultiplicityInvariantAccess().getColonKeyword_4_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getMultiplicityInvariantRule());
	        }
        }
	otherlv_8=RULE_ID
	{
		newLeafNode(otherlv_8, grammarAccess.getMultiplicityInvariantAccess().getTypeFeatureDeclCrossReference_4_1_0()); 
	}

)
))?)
;





// Entry rule entryRuleGeneralInvariant
entryRuleGeneralInvariant returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getGeneralInvariantRule()); }
	 iv_ruleGeneralInvariant=ruleGeneralInvariant 
	 { $current=$iv_ruleGeneralInvariant.current; } 
	 EOF 
;

// Rule GeneralInvariant
ruleGeneralInvariant returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='inv' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getGeneralInvariantAccess().getInvKeyword_0());
    }
((
(
		lv_invName_1_0=RULE_ID
		{
			newLeafNode(lv_invName_1_0, grammarAccess.getGeneralInvariantAccess().getInvNameIDTerminalRuleCall_1_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getGeneralInvariantRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"invName",
        		lv_invName_1_0, 
        		"ID");
	    }

)
)	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getGeneralInvariantAccess().getColonKeyword_1_1());
    }
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getGeneralInvariantAccess().getExpExpParserRuleCall_2_0()); 
	    }
		lv_exp_3_0=ruleExp		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getGeneralInvariantRule());
	        }
       		set(
       			$current, 
       			"exp",
        		lv_exp_3_0, 
        		"Exp");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleSubMemberMatch
entryRuleSubMemberMatch returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSubMemberMatchRule()); }
	 iv_ruleSubMemberMatch=ruleSubMemberMatch 
	 { $current=$iv_ruleSubMemberMatch.current; } 
	 EOF 
;

// Rule SubMemberMatch
ruleSubMemberMatch returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
(
		lv_qNames_0_0=RULE_ID
		{
			newLeafNode(lv_qNames_0_0, grammarAccess.getSubMemberMatchAccess().getQNamesIDTerminalRuleCall_0_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSubMemberMatchRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"qNames",
        		lv_qNames_0_0, 
        		"ID");
	    }

)
)	otherlv_1='.' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getSubMemberMatchAccess().getFullStopKeyword_0_1());
    }
)*((
(
		lv_name_2_0=RULE_ID
		{
			newLeafNode(lv_name_2_0, grammarAccess.getSubMemberMatchAccess().getNameIDTerminalRuleCall_1_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSubMemberMatchRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"ID");
	    }

)
)
    |(
(
		lv_any_3_0=	'*' 
    {
        newLeafNode(lv_any_3_0, grammarAccess.getSubMemberMatchAccess().getAnyAsteriskKeyword_1_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSubMemberMatchRule());
	        }
       		setWithLastConsumed($current, "any", lv_any_3_0, "*");
	    }

)
)))
;





// Entry rule entryRuleConstraintNat
entryRuleConstraintNat returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getConstraintNatRule()); }
	 iv_ruleConstraintNat=ruleConstraintNat 
	 { $current=$iv_ruleConstraintNat.current; } 
	 EOF 
;

// Rule ConstraintNat
ruleConstraintNat returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
    {
        $current = forceCreateModelElement(
            grammarAccess.getConstraintNatAccess().getNumNatConstraintAction_0_0(),
            $current);
    }
)(
(
		lv_num_1_0=RULE_NAT
		{
			newLeafNode(lv_num_1_0, grammarAccess.getConstraintNatAccess().getNumNATTerminalRuleCall_0_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getConstraintNatRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"num",
        		lv_num_1_0, 
        		"NAT");
	    }

)
))
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getConstraintNatAccess().getAnyNatConstraintAction_1_0(),
            $current);
    }
)	otherlv_3='*' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getConstraintNatAccess().getAsteriskKeyword_1_1());
    }
))
;





// Entry rule entryRuleDevice
entryRuleDevice returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDeviceRule()); }
	 iv_ruleDevice=ruleDevice 
	 { $current=$iv_ruleDevice.current; } 
	 EOF 
;

// Rule Device
ruleDevice returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=RULE_ID
		{
			newLeafNode(lv_name_0_0, grammarAccess.getDeviceAccess().getNameIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDeviceRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"ID");
	    }

)
)	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getDeviceAccess().getColonKeyword_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getDeviceRule());
	        }
        }
	otherlv_2=RULE_ID
	{
		newLeafNode(otherlv_2, grammarAccess.getDeviceAccess().getComponentsFeatureDeclCrossReference_2_0()); 
	}

)
)(	otherlv_3='with' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getDeviceAccess().getWithKeyword_3_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getDeviceRule());
	        }
        }
	otherlv_4=RULE_ID
	{
		newLeafNode(otherlv_4, grammarAccess.getDeviceAccess().getComponentsFeatureDeclCrossReference_3_1_0()); 
	}

)
))*(
(
		{ 
	        newCompositeNode(grammarAccess.getDeviceAccess().getConstraintConstraintExpParserRuleCall_4_0()); 
	    }
		lv_constraint_5_0=ruleConstraintExp		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDeviceRule());
	        }
       		set(
       			$current, 
       			"constraint",
        		lv_constraint_5_0, 
        		"ConstraintExp");
	        afterParserOrEnumRuleCall();
	    }

)
)?)
;





// Entry rule entryRuleConstraintExp
entryRuleConstraintExp returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getConstraintExpRule()); }
	 iv_ruleConstraintExp=ruleConstraintExp 
	 { $current=$iv_ruleConstraintExp.current; } 
	 EOF 
;

// Rule ConstraintExp
ruleConstraintExp returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='constraint' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getConstraintExpAccess().getConstraintKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getConstraintExpAccess().getCondExpParserRuleCall_1_0()); 
	    }
		lv_cond_1_0=ruleExp		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConstraintExpRule());
	        }
       		set(
       			$current, 
       			"cond",
        		lv_cond_1_0, 
        		"Exp");
	        afterParserOrEnumRuleCall();
	    }

)
))
;











// Entry rule entryRuleExp
entryRuleExp returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getExpRule()); }
	 iv_ruleExp=ruleExp 
	 { $current=$iv_ruleExp.current; } 
	 EOF 
;

// Rule Exp
ruleExp returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((	otherlv_0='(' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getExpAccess().getLeftParenthesisKeyword_0_0());
    }
(
    {
        $current = forceCreateModelElement(
            grammarAccess.getExpAccess().getBinaryExpAction_0_1(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getExpAccess().getLeftExpParserRuleCall_0_2_0()); 
	    }
		lv_left_2_0=ruleExp		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExpRule());
	        }
       		set(
       			$current, 
       			"left",
        		lv_left_2_0, 
        		"Exp");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getExpAccess().getOpBinaryOpParserRuleCall_0_3_0()); 
	    }
		lv_op_3_0=ruleBinaryOp		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExpRule());
	        }
       		set(
       			$current, 
       			"op",
        		lv_op_3_0, 
        		"BinaryOp");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getExpAccess().getRightExpParserRuleCall_0_4_0()); 
	    }
		lv_right_4_0=ruleExp		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExpRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_4_0, 
        		"Exp");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_5=')' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getExpAccess().getRightParenthesisKeyword_0_5());
    }
)
    |(	otherlv_6='(' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getExpAccess().getLeftParenthesisKeyword_1_0());
    }
(
    {
        $current = forceCreateModelElement(
            grammarAccess.getExpAccess().getUnaryExpAction_1_1(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getExpAccess().getOpUnaryOpParserRuleCall_1_2_0()); 
	    }
		lv_op_8_0=ruleUnaryOp		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExpRule());
	        }
       		set(
       			$current, 
       			"op",
        		lv_op_8_0, 
        		"UnaryOp");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getExpAccess().getArgExpParserRuleCall_1_3_0()); 
	    }
		lv_arg_9_0=ruleExp		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExpRule());
	        }
       		set(
       			$current, 
       			"arg",
        		lv_arg_9_0, 
        		"Exp");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_10=')' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getExpAccess().getRightParenthesisKeyword_1_4());
    }
)
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getExpAccess().getPrimaryExpAction_2_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getExpAccess().getPrimaryPrimaryParserRuleCall_2_1_0()); 
	    }
		lv_primary_12_0=rulePrimary		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExpRule());
	        }
       		set(
       			$current, 
       			"primary",
        		lv_primary_12_0, 
        		"Primary");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_13='.' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getExpAccess().getFullStopKeyword_2_2_0());
    }
(
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getExpAccess().getAccessExpBaseAction_2_2_1(),
            $current);
    }
)(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getExpRule());
	        }
        }
	otherlv_15=RULE_ID
	{
		newLeafNode(otherlv_15, grammarAccess.getExpAccess().getAccessorAccessorCrossReference_2_2_2_0()); 
	}

)
))*))
;





// Entry rule entryRulePrimary
entryRulePrimary returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPrimaryRule()); }
	 iv_rulePrimary=rulePrimary 
	 { $current=$iv_rulePrimary.current; } 
	 EOF 
;

// Rule Primary
rulePrimary returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
    {
        $current = forceCreateModelElement(
            grammarAccess.getPrimaryAccess().getNameExpAction_0_0(),
            $current);
    }
)(
(
		lv_id_1_0=RULE_ID
		{
			newLeafNode(lv_id_1_0, grammarAccess.getPrimaryAccess().getIdIDTerminalRuleCall_0_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPrimaryRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"id",
        		lv_id_1_0, 
        		"ID");
	    }

)
))
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getPrimaryAccess().getLiteralExpAction_1_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getPrimaryAccess().getLitBasicLiteralParserRuleCall_1_1_0()); 
	    }
		lv_lit_3_0=ruleBasicLiteral		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPrimaryRule());
	        }
       		set(
       			$current, 
       			"lit",
        		lv_lit_3_0, 
        		"BasicLiteral");
	        afterParserOrEnumRuleCall();
	    }

)
)))
;





// Entry rule entryRuleBinaryOp
entryRuleBinaryOp returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getBinaryOpRule()); } 
	 iv_ruleBinaryOp=ruleBinaryOp 
	 { $current=$iv_ruleBinaryOp.current.getText(); }  
	 EOF 
;

// Rule BinaryOp
ruleBinaryOp returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='==' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getBinaryOpAccess().getEqualsSignEqualsSignKeyword_0()); 
    }

    |
	kw='!=' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getBinaryOpAccess().getExclamationMarkEqualsSignKeyword_1()); 
    }

    |
	kw='>=' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getBinaryOpAccess().getGreaterThanSignEqualsSignKeyword_2()); 
    }

    |
	kw='<=' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getBinaryOpAccess().getLessThanSignEqualsSignKeyword_3()); 
    }

    |
	kw='>' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getBinaryOpAccess().getGreaterThanSignKeyword_4()); 
    }

    |
	kw='<' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getBinaryOpAccess().getLessThanSignKeyword_5()); 
    }

    |
	kw='&&' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getBinaryOpAccess().getAmpersandAmpersandKeyword_6()); 
    }

    |
	kw='||' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getBinaryOpAccess().getVerticalLineVerticalLineKeyword_7()); 
    }

    |
	kw='==>' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getBinaryOpAccess().getEqualsSignEqualsSignGreaterThanSignKeyword_8()); 
    }

    |
	kw='<==' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getBinaryOpAccess().getLessThanSignEqualsSignEqualsSignKeyword_9()); 
    }

    |
	kw='+' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getBinaryOpAccess().getPlusSignKeyword_10()); 
    }

    |
	kw='-' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getBinaryOpAccess().getHyphenMinusKeyword_11()); 
    }

    |
	kw='*' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getBinaryOpAccess().getAsteriskKeyword_12()); 
    }

    |
	kw='/' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getBinaryOpAccess().getSolidusKeyword_13()); 
    }

    |
	kw='%' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getBinaryOpAccess().getPercentSignKeyword_14()); 
    }
)
    ;





// Entry rule entryRuleUnaryOp
entryRuleUnaryOp returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getUnaryOpRule()); } 
	 iv_ruleUnaryOp=ruleUnaryOp 
	 { $current=$iv_ruleUnaryOp.current.getText(); }  
	 EOF 
;

// Rule UnaryOp
ruleUnaryOp returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='+' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getUnaryOpAccess().getPlusSignKeyword_0()); 
    }

    |
	kw='-' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getUnaryOpAccess().getHyphenMinusKeyword_1()); 
    }

    |
	kw='!' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getUnaryOpAccess().getExclamationMarkKeyword_2()); 
    }

    |
	kw='^' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getUnaryOpAccess().getCircumflexAccentKeyword_3()); 
    }

    |
	kw='~' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getUnaryOpAccess().getTildeKeyword_4()); 
    }
)
    ;





// Entry rule entryRuleType
entryRuleType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTypeRule()); }
	 iv_ruleType=ruleType 
	 { $current=$iv_ruleType.current; } 
	 EOF 
;

// Rule Type
ruleType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((	otherlv_0='Seq' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getTypeAccess().getSeqKeyword_0_0());
    }
(
    {
        $current = forceCreateModelElement(
            grammarAccess.getTypeAccess().getSeqTypeAction_0_1(),
            $current);
    }
)	otherlv_2='[' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getTypeAccess().getLeftSquareBracketKeyword_0_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTypeAccess().getBaseTypeParserRuleCall_0_3_0()); 
	    }
		lv_base_3_0=ruleType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTypeRule());
	        }
       		set(
       			$current, 
       			"base",
        		lv_base_3_0, 
        		"Type");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4=']' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getTypeAccess().getRightSquareBracketKeyword_0_4());
    }
)
    |(	otherlv_5='Set' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getTypeAccess().getSetKeyword_1_0());
    }
(
    {
        $current = forceCreateModelElement(
            grammarAccess.getTypeAccess().getSetTypeAction_1_1(),
            $current);
    }
)	otherlv_7='[' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getTypeAccess().getLeftSquareBracketKeyword_1_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTypeAccess().getBaseTypeParserRuleCall_1_3_0()); 
	    }
		lv_base_8_0=ruleType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTypeRule());
	        }
       		set(
       			$current, 
       			"base",
        		lv_base_8_0, 
        		"Type");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_9=']' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getTypeAccess().getRightSquareBracketKeyword_1_4());
    }
)
    |
    { 
        newCompositeNode(grammarAccess.getTypeAccess().getBaseTypeParserRuleCall_2()); 
    }
    this_BaseType_10=ruleBaseType
    { 
        $current = $this_BaseType_10.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleBaseType
entryRuleBaseType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBaseTypeRule()); }
	 iv_ruleBaseType=ruleBaseType 
	 { $current=$iv_ruleBaseType.current; } 
	 EOF 
;

// Rule BaseType
ruleBaseType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getBaseTypeRule());
	        }
        }
	otherlv_0=RULE_ID
	{
		newLeafNode(otherlv_0, grammarAccess.getBaseTypeAccess().getTypeTypeDeclCrossReference_0_0()); 
	}

)
)
    |(	otherlv_1='<' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getBaseTypeAccess().getLessThanSignKeyword_1_0());
    }
(
    {
        $current = forceCreateModelElement(
            grammarAccess.getBaseTypeAccess().getTupleTypeAction_1_1(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getBaseTypeAccess().getElemTypesTypeParserRuleCall_1_2_0()); 
	    }
		lv_elemTypes_3_0=ruleType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBaseTypeRule());
	        }
       		add(
       			$current, 
       			"elemTypes",
        		lv_elemTypes_3_0, 
        		"Type");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_4='*' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getBaseTypeAccess().getAsteriskKeyword_1_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBaseTypeAccess().getElemTypesTypeParserRuleCall_1_3_1_0()); 
	    }
		lv_elemTypes_5_0=ruleType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBaseTypeRule());
	        }
       		add(
       			$current, 
       			"elemTypes",
        		lv_elemTypes_5_0, 
        		"Type");
	        afterParserOrEnumRuleCall();
	    }

)
))+	otherlv_6='>' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getBaseTypeAccess().getGreaterThanSignKeyword_1_4());
    }
)
    |(	otherlv_7='Option' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getBaseTypeAccess().getOptionKeyword_2_0());
    }
(
    {
        $current = forceCreateModelElement(
            grammarAccess.getBaseTypeAccess().getOptionTypeAction_2_1(),
            $current);
    }
)	otherlv_9='[' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getBaseTypeAccess().getLeftSquareBracketKeyword_2_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBaseTypeAccess().getBaseTypeParserRuleCall_2_3_0()); 
	    }
		lv_base_10_0=ruleType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBaseTypeRule());
	        }
       		set(
       			$current, 
       			"base",
        		lv_base_10_0, 
        		"Type");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_11=']' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getBaseTypeAccess().getRightSquareBracketKeyword_2_4());
    }
)
    |(	otherlv_12='Some' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getBaseTypeAccess().getSomeKeyword_3_0());
    }
(
    {
        $current = forceCreateModelElement(
            grammarAccess.getBaseTypeAccess().getSomeTypeAction_3_1(),
            $current);
    }
)	otherlv_14='[' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getBaseTypeAccess().getLeftSquareBracketKeyword_3_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBaseTypeAccess().getBaseTypeParserRuleCall_3_3_0()); 
	    }
		lv_base_15_0=ruleType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBaseTypeRule());
	        }
       		set(
       			$current, 
       			"base",
        		lv_base_15_0, 
        		"Type");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_16=']' 
    {
    	newLeafNode(otherlv_16, grammarAccess.getBaseTypeAccess().getRightSquareBracketKeyword_3_4());
    }
)
    |(	otherlv_17='None' 
    {
    	newLeafNode(otherlv_17, grammarAccess.getBaseTypeAccess().getNoneKeyword_4_0());
    }
(
    {
        $current = forceCreateModelElement(
            grammarAccess.getBaseTypeAccess().getNoneTypeAction_4_1(),
            $current);
    }
)	otherlv_19='[' 
    {
    	newLeafNode(otherlv_19, grammarAccess.getBaseTypeAccess().getLeftSquareBracketKeyword_4_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBaseTypeAccess().getBaseTypeParserRuleCall_4_3_0()); 
	    }
		lv_base_20_0=ruleType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBaseTypeRule());
	        }
       		set(
       			$current, 
       			"base",
        		lv_base_20_0, 
        		"Type");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_21=']' 
    {
    	newLeafNode(otherlv_21, grammarAccess.getBaseTypeAccess().getRightSquareBracketKeyword_4_4());
    }
))
;





// Entry rule entryRuleLiteral
entryRuleLiteral returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLiteralRule()); }
	 iv_ruleLiteral=ruleLiteral 
	 { $current=$iv_ruleLiteral.current; } 
	 EOF 
;

// Rule Literal
ruleLiteral returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getLiteralAccess().getBasicLiteralParserRuleCall_0()); 
    }
    this_BasicLiteral_0=ruleBasicLiteral
    { 
        $current = $this_BasicLiteral_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getLiteralAccess().getTupleLiteralParserRuleCall_1()); 
    }
    this_TupleLiteral_1=ruleTupleLiteral
    { 
        $current = $this_TupleLiteral_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getLiteralAccess().getOptionLiteralParserRuleCall_2()); 
    }
    this_OptionLiteral_2=ruleOptionLiteral
    { 
        $current = $this_OptionLiteral_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getLiteralAccess().getSeqLiteralParserRuleCall_3()); 
    }
    this_SeqLiteral_3=ruleSeqLiteral
    { 
        $current = $this_SeqLiteral_3.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getLiteralAccess().getSetLiteralParserRuleCall_4()); 
    }
    this_SetLiteral_4=ruleSetLiteral
    { 
        $current = $this_SetLiteral_4.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleBasicLiteral
entryRuleBasicLiteral returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBasicLiteralRule()); }
	 iv_ruleBasicLiteral=ruleBasicLiteral 
	 { $current=$iv_ruleBasicLiteral.current; } 
	 EOF 
;

// Rule BasicLiteral
ruleBasicLiteral returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getBasicLiteralRule());
	        }
        }
	otherlv_0=RULE_ID
	{
		newLeafNode(otherlv_0, grammarAccess.getBasicLiteralAccess().getTypeConsTypeDeclCrossReference_0_0()); 
	}

)
)(
(
		lv_lit_1_0=RULE_LIT
		{
			newLeafNode(lv_lit_1_0, grammarAccess.getBasicLiteralAccess().getLitLITTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBasicLiteralRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"lit",
        		lv_lit_1_0, 
        		"LIT");
	    }

)
))
;





// Entry rule entryRuleTupleLiteral
entryRuleTupleLiteral returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTupleLiteralRule()); }
	 iv_ruleTupleLiteral=ruleTupleLiteral 
	 { $current=$iv_ruleTupleLiteral.current; } 
	 EOF 
;

// Rule TupleLiteral
ruleTupleLiteral returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='<' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getTupleLiteralAccess().getLessThanSignKeyword_0());
    }
(
    {
        $current = forceCreateModelElement(
            grammarAccess.getTupleLiteralAccess().getTupleLiteralAction_1(),
            $current);
    }
)((
(
		{ 
	        newCompositeNode(grammarAccess.getTupleLiteralAccess().getElemsLiteralParserRuleCall_2_0_0()); 
	    }
		lv_elems_2_0=ruleLiteral		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTupleLiteralRule());
	        }
       		add(
       			$current, 
       			"elems",
        		lv_elems_2_0, 
        		"Literal");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getTupleLiteralAccess().getCommaKeyword_2_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTupleLiteralAccess().getElemsLiteralParserRuleCall_2_1_1_0()); 
	    }
		lv_elems_4_0=ruleLiteral		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTupleLiteralRule());
	        }
       		add(
       			$current, 
       			"elems",
        		lv_elems_4_0, 
        		"Literal");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_5='>' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getTupleLiteralAccess().getGreaterThanSignKeyword_3());
    }
)
;





// Entry rule entryRuleSeqLiteral
entryRuleSeqLiteral returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSeqLiteralRule()); }
	 iv_ruleSeqLiteral=ruleSeqLiteral 
	 { $current=$iv_ruleSeqLiteral.current; } 
	 EOF 
;

// Rule SeqLiteral
ruleSeqLiteral returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='Seq' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSeqLiteralAccess().getSeqKeyword_0());
    }
	otherlv_1='[' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getSeqLiteralAccess().getLeftSquareBracketKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSeqLiteralAccess().getElementTypeTypeParserRuleCall_2_0()); 
	    }
		lv_elementType_2_0=ruleType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSeqLiteralRule());
	        }
       		set(
       			$current, 
       			"elementType",
        		lv_elementType_2_0, 
        		"Type");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3=']' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getSeqLiteralAccess().getRightSquareBracketKeyword_3());
    }
	otherlv_4='[' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getSeqLiteralAccess().getLeftSquareBracketKeyword_4());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getSeqLiteralAccess().getElemsSimpleLiteralParserRuleCall_5_0_0()); 
	    }
		lv_elems_5_0=ruleSimpleLiteral		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSeqLiteralRule());
	        }
       		add(
       			$current, 
       			"elems",
        		lv_elems_5_0, 
        		"SimpleLiteral");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_6=',' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getSeqLiteralAccess().getCommaKeyword_5_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSeqLiteralAccess().getElemsSimpleLiteralParserRuleCall_5_1_1_0()); 
	    }
		lv_elems_7_0=ruleSimpleLiteral		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSeqLiteralRule());
	        }
       		add(
       			$current, 
       			"elems",
        		lv_elems_7_0, 
        		"SimpleLiteral");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_8=']' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getSeqLiteralAccess().getRightSquareBracketKeyword_6());
    }
)
;





// Entry rule entryRuleSetLiteral
entryRuleSetLiteral returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSetLiteralRule()); }
	 iv_ruleSetLiteral=ruleSetLiteral 
	 { $current=$iv_ruleSetLiteral.current; } 
	 EOF 
;

// Rule SetLiteral
ruleSetLiteral returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='Set' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSetLiteralAccess().getSetKeyword_0());
    }
	otherlv_1='[' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getSetLiteralAccess().getLeftSquareBracketKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSetLiteralAccess().getElementTypeTypeParserRuleCall_2_0()); 
	    }
		lv_elementType_2_0=ruleType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSetLiteralRule());
	        }
       		set(
       			$current, 
       			"elementType",
        		lv_elementType_2_0, 
        		"Type");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3=']' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getSetLiteralAccess().getRightSquareBracketKeyword_3());
    }
	otherlv_4='{' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getSetLiteralAccess().getLeftCurlyBracketKeyword_4());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getSetLiteralAccess().getElemsSimpleLiteralParserRuleCall_5_0_0()); 
	    }
		lv_elems_5_0=ruleSimpleLiteral		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSetLiteralRule());
	        }
       		add(
       			$current, 
       			"elems",
        		lv_elems_5_0, 
        		"SimpleLiteral");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_6=',' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getSetLiteralAccess().getCommaKeyword_5_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSetLiteralAccess().getElemsSimpleLiteralParserRuleCall_5_1_1_0()); 
	    }
		lv_elems_7_0=ruleSimpleLiteral		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSetLiteralRule());
	        }
       		add(
       			$current, 
       			"elems",
        		lv_elems_7_0, 
        		"SimpleLiteral");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_8='}' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getSetLiteralAccess().getRightCurlyBracketKeyword_6());
    }
)
;





// Entry rule entryRuleOptionLiteral
entryRuleOptionLiteral returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getOptionLiteralRule()); }
	 iv_ruleOptionLiteral=ruleOptionLiteral 
	 { $current=$iv_ruleOptionLiteral.current; } 
	 EOF 
;

// Rule OptionLiteral
ruleOptionLiteral returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((	otherlv_0='None' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getOptionLiteralAccess().getNoneKeyword_0_0());
    }
(
    {
        $current = forceCreateModelElement(
            grammarAccess.getOptionLiteralAccess().getNoneLiteralAction_0_1(),
            $current);
    }
)	otherlv_2='[' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getOptionLiteralAccess().getLeftSquareBracketKeyword_0_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getOptionLiteralAccess().getTypeTypeParserRuleCall_0_3_0()); 
	    }
		lv_type_3_0=ruleType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOptionLiteralRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_3_0, 
        		"Type");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4=']' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getOptionLiteralAccess().getRightSquareBracketKeyword_0_4());
    }
)
    |(	otherlv_5='Some' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getOptionLiteralAccess().getSomeKeyword_1_0());
    }
(
    {
        $current = forceCreateModelElement(
            grammarAccess.getOptionLiteralAccess().getSomeLiteralAction_1_1(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getOptionLiteralAccess().getLitLiteralParserRuleCall_1_2_0()); 
	    }
		lv_lit_7_0=ruleLiteral		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOptionLiteralRule());
	        }
       		set(
       			$current, 
       			"lit",
        		lv_lit_7_0, 
        		"Literal");
	        afterParserOrEnumRuleCall();
	    }

)
)))
;





// Entry rule entryRuleSimpleLiteral
entryRuleSimpleLiteral returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSimpleLiteralRule()); }
	 iv_ruleSimpleLiteral=ruleSimpleLiteral 
	 { $current=$iv_ruleSimpleLiteral.current; } 
	 EOF 
;

// Rule SimpleLiteral
ruleSimpleLiteral returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getSimpleLiteralAccess().getSimpleBasicLiteralParserRuleCall_0()); 
    }
    this_SimpleBasicLiteral_0=ruleSimpleBasicLiteral
    { 
        $current = $this_SimpleBasicLiteral_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getSimpleLiteralAccess().getSimpleTupleLiteralParserRuleCall_1()); 
    }
    this_SimpleTupleLiteral_1=ruleSimpleTupleLiteral
    { 
        $current = $this_SimpleTupleLiteral_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getSimpleLiteralAccess().getSimpleSeqLiteralParserRuleCall_2()); 
    }
    this_SimpleSeqLiteral_2=ruleSimpleSeqLiteral
    { 
        $current = $this_SimpleSeqLiteral_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getSimpleLiteralAccess().getSimpleSetLiteralParserRuleCall_3()); 
    }
    this_SimpleSetLiteral_3=ruleSimpleSetLiteral
    { 
        $current = $this_SimpleSetLiteral_3.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getSimpleLiteralAccess().getSimpleOptionLiteralParserRuleCall_4()); 
    }
    this_SimpleOptionLiteral_4=ruleSimpleOptionLiteral
    { 
        $current = $this_SimpleOptionLiteral_4.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleSimpleBasicLiteral
entryRuleSimpleBasicLiteral returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSimpleBasicLiteralRule()); }
	 iv_ruleSimpleBasicLiteral=ruleSimpleBasicLiteral 
	 { $current=$iv_ruleSimpleBasicLiteral.current; } 
	 EOF 
;

// Rule SimpleBasicLiteral
ruleSimpleBasicLiteral returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		lv_lit_0_0=RULE_LIT
		{
			newLeafNode(lv_lit_0_0, grammarAccess.getSimpleBasicLiteralAccess().getLitLITTerminalRuleCall_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSimpleBasicLiteralRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"lit",
        		lv_lit_0_0, 
        		"LIT");
	    }

)
)
;





// Entry rule entryRuleSimpleTupleLiteral
entryRuleSimpleTupleLiteral returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSimpleTupleLiteralRule()); }
	 iv_ruleSimpleTupleLiteral=ruleSimpleTupleLiteral 
	 { $current=$iv_ruleSimpleTupleLiteral.current; } 
	 EOF 
;

// Rule SimpleTupleLiteral
ruleSimpleTupleLiteral returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='<' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSimpleTupleLiteralAccess().getLessThanSignKeyword_0());
    }
(
    {
        $current = forceCreateModelElement(
            grammarAccess.getSimpleTupleLiteralAccess().getSimpleTupleLiteralAction_1(),
            $current);
    }
)((
(
		{ 
	        newCompositeNode(grammarAccess.getSimpleTupleLiteralAccess().getElemsSimpleLiteralParserRuleCall_2_0_0()); 
	    }
		lv_elems_2_0=ruleSimpleLiteral		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSimpleTupleLiteralRule());
	        }
       		add(
       			$current, 
       			"elems",
        		lv_elems_2_0, 
        		"SimpleLiteral");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getSimpleTupleLiteralAccess().getCommaKeyword_2_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSimpleTupleLiteralAccess().getElemsSimpleLiteralParserRuleCall_2_1_1_0()); 
	    }
		lv_elems_4_0=ruleSimpleLiteral		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSimpleTupleLiteralRule());
	        }
       		add(
       			$current, 
       			"elems",
        		lv_elems_4_0, 
        		"SimpleLiteral");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_5='>' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getSimpleTupleLiteralAccess().getGreaterThanSignKeyword_3());
    }
)
;





// Entry rule entryRuleSimpleOptionLiteral
entryRuleSimpleOptionLiteral returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSimpleOptionLiteralRule()); }
	 iv_ruleSimpleOptionLiteral=ruleSimpleOptionLiteral 
	 { $current=$iv_ruleSimpleOptionLiteral.current; } 
	 EOF 
;

// Rule SimpleOptionLiteral
ruleSimpleOptionLiteral returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((	otherlv_0='None' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSimpleOptionLiteralAccess().getNoneKeyword_0_0());
    }
(
    {
        $current = forceCreateModelElement(
            grammarAccess.getSimpleOptionLiteralAccess().getSimpleNoneLiteralAction_0_1(),
            $current);
    }
))
    |(	otherlv_2='Some' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getSimpleOptionLiteralAccess().getSomeKeyword_1_0());
    }
(
    {
        $current = forceCreateModelElement(
            grammarAccess.getSimpleOptionLiteralAccess().getSimpleSomeLiteralAction_1_1(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getSimpleOptionLiteralAccess().getLitSimpleLiteralParserRuleCall_1_2_0()); 
	    }
		lv_lit_4_0=ruleSimpleLiteral		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSimpleOptionLiteralRule());
	        }
       		set(
       			$current, 
       			"lit",
        		lv_lit_4_0, 
        		"SimpleLiteral");
	        afterParserOrEnumRuleCall();
	    }

)
)))
;





// Entry rule entryRuleSimpleSeqLiteral
entryRuleSimpleSeqLiteral returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSimpleSeqLiteralRule()); }
	 iv_ruleSimpleSeqLiteral=ruleSimpleSeqLiteral 
	 { $current=$iv_ruleSimpleSeqLiteral.current; } 
	 EOF 
;

// Rule SimpleSeqLiteral
ruleSimpleSeqLiteral returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='[' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSimpleSeqLiteralAccess().getLeftSquareBracketKeyword_0());
    }
(
    {
        $current = forceCreateModelElement(
            grammarAccess.getSimpleSeqLiteralAccess().getSimpleSeqLiteralAction_1(),
            $current);
    }
)((
(
		{ 
	        newCompositeNode(grammarAccess.getSimpleSeqLiteralAccess().getElemsSimpleLiteralParserRuleCall_2_0_0()); 
	    }
		lv_elems_2_0=ruleSimpleLiteral		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSimpleSeqLiteralRule());
	        }
       		add(
       			$current, 
       			"elems",
        		lv_elems_2_0, 
        		"SimpleLiteral");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getSimpleSeqLiteralAccess().getCommaKeyword_2_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSimpleSeqLiteralAccess().getElemsSimpleLiteralParserRuleCall_2_1_1_0()); 
	    }
		lv_elems_4_0=ruleSimpleLiteral		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSimpleSeqLiteralRule());
	        }
       		add(
       			$current, 
       			"elems",
        		lv_elems_4_0, 
        		"SimpleLiteral");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_5=']' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getSimpleSeqLiteralAccess().getRightSquareBracketKeyword_3());
    }
)
;





// Entry rule entryRuleSimpleSetLiteral
entryRuleSimpleSetLiteral returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSimpleSetLiteralRule()); }
	 iv_ruleSimpleSetLiteral=ruleSimpleSetLiteral 
	 { $current=$iv_ruleSimpleSetLiteral.current; } 
	 EOF 
;

// Rule SimpleSetLiteral
ruleSimpleSetLiteral returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='{' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSimpleSetLiteralAccess().getLeftCurlyBracketKeyword_0());
    }
(
    {
        $current = forceCreateModelElement(
            grammarAccess.getSimpleSetLiteralAccess().getSimpleSetLiteralAction_1(),
            $current);
    }
)((
(
		{ 
	        newCompositeNode(grammarAccess.getSimpleSetLiteralAccess().getElemsSimpleLiteralParserRuleCall_2_0_0()); 
	    }
		lv_elems_2_0=ruleSimpleLiteral		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSimpleSetLiteralRule());
	        }
       		add(
       			$current, 
       			"elems",
        		lv_elems_2_0, 
        		"SimpleLiteral");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getSimpleSetLiteralAccess().getCommaKeyword_2_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSimpleSetLiteralAccess().getElemsSimpleLiteralParserRuleCall_2_1_1_0()); 
	    }
		lv_elems_4_0=ruleSimpleLiteral		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSimpleSetLiteralRule());
	        }
       		add(
       			$current, 
       			"elems",
        		lv_elems_4_0, 
        		"SimpleLiteral");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_5='}' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getSimpleSetLiteralAccess().getRightCurlyBracketKeyword_3());
    }
)
;





RULE_ID : '\''? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_LIT : '\'' '(' ( options {greedy=false;} : . )*')';

RULE_NAT : ('0'|'1'..'9' ('0'..'9')*);

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;


